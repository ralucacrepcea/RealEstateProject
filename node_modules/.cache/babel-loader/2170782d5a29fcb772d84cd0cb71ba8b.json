{"ast":null,"code":"import React,{useEffect}from'react';import{Navbar}from'./Navbar';import{Products}from'./Products';import{useHistory}from'react-router-dom';import{auth}from'../Config/Config';export const Home=({user})=>{const history=useHistory();useEffect(()=>{// forcing user to signup\nauth.onAuthStateChanged(user=>{if(!user){history.push('/login');}});});return/*#__PURE__*/React.createElement(\"div\",{className:\"wrapper\"},/*#__PURE__*/React.createElement(Navbar,{user:user}),/*#__PURE__*/React.createElement(Products,null));};","map":{"version":3,"names":["React","useEffect","Navbar","Products","useHistory","auth","Home","user","history","onAuthStateChanged","push","createElement","className"],"sources":["/Users/raluca-mariacrepcea/Desktop/RealEstate/EcommercsWithReactAndFirebase/src/Components/Home.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { Navbar } from './Navbar';\nimport { Products } from './Products'\nimport { useHistory } from 'react-router-dom'\nimport { auth } from '../Config/Config'\n\nexport const Home = ({ user }) => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        // forcing user to signup\n        auth.onAuthStateChanged(user => {\n            if (!user) {\n                history.push('/login');\n            }\n        })\n    })\n\n    return (\n        <div className='wrapper'>\n            <Navbar user={user} />\n            <Products />\n        </div>\n    )\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,MAAM,KAAQ,UAAU,CACjC,OAASC,QAAQ,KAAQ,YAAY,CACrC,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,OAASC,IAAI,KAAQ,kBAAkB,CAEvC,MAAO,MAAM,CAAAC,IAAI,CAAGA,CAAC,CAAEC,IAAK,CAAC,GAAK,CAE9B,KAAM,CAAAC,OAAO,CAAGJ,UAAU,CAAC,CAAC,CAE5BH,SAAS,CAAC,IAAM,CACZ;AACAI,IAAI,CAACI,kBAAkB,CAACF,IAAI,EAAI,CAC5B,GAAI,CAACA,IAAI,CAAE,CACPC,OAAO,CAACE,IAAI,CAAC,QAAQ,CAAC,CAC1B,CACJ,CAAC,CAAC,CACN,CAAC,CAAC,CAEF,mBACIV,KAAA,CAAAW,aAAA,QAAKC,SAAS,CAAC,SAAS,eACpBZ,KAAA,CAAAW,aAAA,CAACT,MAAM,EAACK,IAAI,CAAEA,IAAK,CAAE,CAAC,cACtBP,KAAA,CAAAW,aAAA,CAACR,QAAQ,KAAE,CACV,CAAC,CAEd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}