{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n/**\r\n * Domain name for firebase storage.\r\n */\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FirebaseStorageError = /** @class */function () {\n  function FirebaseStorageError(code, message) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n  FirebaseStorageError.prototype.codeProp = function () {\n    return this.code;\n  };\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.codeProp();\n  };\n  FirebaseStorageError.prototype.serverResponseProp = function () {\n    return this.serverResponse_;\n  };\n  FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n    this.serverResponse_ = serverResponse;\n  };\n  Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n    get: function () {\n      return this.name_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n    get: function () {\n      return this.code_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function () {\n      if (this.serverResponse_) {\n        return this.message_ + '\\n' + this.serverResponse_;\n      } else {\n        return this.message_;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function () {\n      return this.serverResponse_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}();\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\nfunction invalidArgument(index, fnName, message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n  var countPart;\n  var plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message A message describing the internal error.\r\n */\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\nfunction formatValidator(stringFormat) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n    default:\n      throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n  }\n}\n/**\r\n * @struct\r\n */\nvar StringData = /** @class */function () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n  return StringData;\n}();\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  }\n  // assert(false);\n  throw unknown();\n}\nfunction utf8Bytes_(value) {\n  var b = [];\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\nfunction percentEncodedBytes_(value) {\n  var decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n        break;\n      }\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n  var bytes;\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  var array = new Uint8Array(bytes.length);\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n/**\r\n * @struct\r\n */\nvar DataURLParts = /** @class */function () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n    var middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n  return DataURLParts;\n}();\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n  return s.substring(s.length - end.length) === end;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\nfunction isDef(p) {\n  return p != null;\n}\nfunction isJustDef(p) {\n  return p !== void 0;\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\nfunction isObject(p) {\n  return typeof p === 'object';\n}\nfunction isNonNullObject(p) {\n  return isObject(p) && p !== null;\n}\nfunction isNonArrayObject(p) {\n  return isObject(p) && !Array.isArray(p);\n}\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\nfunction isInteger(p) {\n  return isNumber(p) && Number.isInteger(p);\n}\nfunction isNumber(p) {\n  return typeof p === 'number' || p instanceof Number;\n}\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @enum{number}\r\n */\nvar ErrorCode;\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\nvar NetworkXhrIo = /** @class */function () {\n  function NetworkXhrIo() {\n    var _this = this;\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (isDef(headers)) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n  return NetworkXhrIo;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\nvar XhrIoPool = /** @class */function () {\n  function XhrIoPool() {}\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n  return XhrIoPool;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\nfunction getBlob() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\nvar FbsBlob = /** @class */function () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n  FbsBlob.getBlob = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n  return FbsBlob;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @struct\r\n */\nvar Location = /** @class */function () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function () {\n      return this.path_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function () {\n      return this.path.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  };\n  return Location;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\nfunction jsonObjectOrNull(s) {\n  var obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n/**\r\n * @return Null if the path is already at the root.\r\n */\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n  var index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  var newPath = path.slice(0, index);\n  return newPath;\n}\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction noXform_(metadata, value) {\n  return value;\n}\n/**\r\n * @struct\r\n */\nvar Mapping = /** @class */function () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n  return Mapping;\n}();\nvar mappings_ = null;\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n  function xformSize(_metadata, size) {\n    if (isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service.makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n  addRef(metadata, service);\n  return metadata;\n}\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  var tokens = obj['downloadTokens'];\n  if (tokens.length === 0) {\n    return null;\n  }\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\nfunction metadataValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n  for (var key in p) {\n    if (p.hasOwnProperty(key)) {\n      var val = p[key];\n      if (key === 'customMetadata') {\n        if (!isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MAX_RESULTS_KEY = 'maxResults';\nvar MAX_MAX_RESULTS = 1000;\nvar PAGE_TOKEN_KEY = 'pageToken';\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = service.makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\nfunction listOptionsValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n  for (var key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (!isInteger(p[MAX_RESULTS_KEY]) || p[MAX_RESULTS_KEY] <= 0) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n      if (p[MAX_RESULTS_KEY] > 1000) {\n        throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\nvar RequestInfo = /** @class */function () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n  return RequestInfo;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n  return handler;\n}\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n  return handler;\n}\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n  return handler;\n}\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\nfunction getMetadata(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction list(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction updateMetadata(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction deleteObject(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n  function handler(_xhr, _text) {}\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n  function genBoundary() {\n    var str = '';\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\nvar ResumableUploadStatus = /** @class */function () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n  return ResumableUploadStatus;\n}();\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url;\n  }\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @struct\r\n */\nvar Observer = /** @class */function () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || isDef(error) || isDef(complete);\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n  return Observer;\n}();\nvar UploadTaskSnapshot = /** @class */function () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n  return UploadTaskSnapshot;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\nfunction validate(name, specs, passed) {\n  var minArgs = specs.length;\n  var maxArgs = specs.length;\n  for (var i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n  var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n  if (!validLength) {\n    throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n  }\n  for (var i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw invalidArgument(i, name, e.message);\n      } else {\n        throw invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n/**\r\n * @struct\r\n */\nvar ArgSpec = /** @class */function () {\n  function ArgSpec(validator, optional) {\n    var self = this;\n    this.validator = function (p) {\n      if (self.optional && !isJustDef(p)) {\n        return;\n      }\n      validator(p);\n    };\n    this.optional = !!optional;\n  }\n  return ArgSpec;\n}();\nfunction and_(v1, v2) {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\nfunction stringSpec(validator, optional) {\n  function stringValidator(p) {\n    if (!isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n  var chainedValidator;\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n  return new ArgSpec(chainedValidator, optional);\n}\nfunction uploadDataSpec() {\n  function validator(p) {\n    var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n  return new ArgSpec(validator);\n}\nfunction metadataSpec(optional) {\n  return new ArgSpec(metadataValidator, optional);\n}\nfunction listOptionSpec(optional) {\n  return new ArgSpec(listOptionsValidator, optional);\n}\nfunction nonNegativeNumberSpec() {\n  function validator(p) {\n    var valid = isNumber(p) && p >= 0;\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n  return new ArgSpec(validator);\n}\nfunction looseObjectSpec(validator, optional) {\n  function isLooseObjectValidator(p) {\n    var isLooseObject = p === null || isDef(p) && p instanceof Object;\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\nfunction nullFunctionSpec(optional) {\n  function validator(p) {\n    var valid = p === null || isFunction(p);\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n  return new ArgSpec(validator, optional);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\nvar UploadTask = /** @class */function () {\n  /**\r\n   * @param ref The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob The blob to upload.\r\n   */\n  function UploadTask(ref, service, location, mappings, blob, metadata) {\n    var _this = this;\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    this.transferred_ = 0;\n    this.needToFetchStatus_ = false;\n    this.needToFetchMetadata_ = false;\n    this.observers_ = [];\n    this.error_ = null;\n    this.uploadUrl_ = null;\n    this.request_ = null;\n    this.chunkMultiplier_ = 1;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.ref_ = ref;\n    this.service_ = service;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n    this.errorHandler_ = function (error) {\n      _this.request_ = null;\n      _this.chunkMultiplier_ = 1;\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.needToFetchStatus_ = true;\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.metadataErrorHandler_ = function (error) {\n      _this.request_ = null;\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n      _this.start_();\n    });\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this.promise_.then(null, function () {});\n  }\n  UploadTask.prototype.makeProgressCallback_ = function () {\n    var _this = this;\n    var sizeBefore = this.transferred_;\n    return function (loaded) {\n      return _this.updateProgress_(sizeBefore + loaded);\n    };\n  };\n  UploadTask.prototype.shouldDoResumable_ = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n  UploadTask.prototype.start_ = function () {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this.request_ !== null) {\n      return;\n    }\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  };\n  UploadTask.prototype.resolveToken_ = function (callback) {\n    var _this = this;\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.service_.getAuthToken().then(function (authToken) {\n      switch (_this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n        case InternalTaskState.CANCELING:\n          _this.transition_(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          _this.transition_(InternalTaskState.PAUSED);\n          break;\n      }\n    });\n  };\n  // TODO(andysoto): assert false\n  UploadTask.prototype.createResumable_ = function () {\n    var _this = this;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = createResumableUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n      var createRequest = _this.service_.makeRequest(requestInfo, authToken);\n      _this.request_ = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this.request_ = null;\n        _this.uploadUrl_ = url;\n        _this.needToFetchStatus_ = false;\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n  UploadTask.prototype.fetchStatus_ = function () {\n    var _this = this;\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this.service_, _this.location_, url, _this.blob_);\n      var statusRequest = _this.service_.makeRequest(requestInfo, authToken);\n      _this.request_ = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this.request_ = null;\n        _this.updateProgress_(status.current);\n        _this.needToFetchStatus_ = false;\n        if (status.finalized) {\n          _this.needToFetchMetadata_ = true;\n        }\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n  UploadTask.prototype.continueUpload_ = function () {\n    var _this = this;\n    var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo;\n      try {\n        requestInfo = continueResumableUpload(_this.location_, _this.service_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n      } catch (e) {\n        _this.error_ = e;\n        _this.transition_(InternalTaskState.ERROR);\n        return;\n      }\n      var uploadRequest = _this.service_.makeRequest(requestInfo, authToken);\n      _this.request_ = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this.increaseMultiplier_();\n        _this.request_ = null;\n        _this.updateProgress_(newStatus.current);\n        if (newStatus.finalized) {\n          _this.metadata_ = newStatus.metadata;\n          _this.transition_(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this.errorHandler_);\n    });\n  };\n  UploadTask.prototype.increaseMultiplier_ = function () {\n    var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  };\n  UploadTask.prototype.fetchMetadata_ = function () {\n    var _this = this;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getMetadata(_this.service_, _this.location_, _this.mappings_);\n      var metadataRequest = _this.service_.makeRequest(requestInfo, authToken);\n      _this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.metadataErrorHandler_);\n    });\n  };\n  UploadTask.prototype.oneShotUpload_ = function () {\n    var _this = this;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = multipartUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n      var multipartRequest = _this.service_.makeRequest(requestInfo, authToken);\n      _this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n        _this.updateProgress_(_this.blob_.size());\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.errorHandler_);\n    });\n  };\n  UploadTask.prototype.updateProgress_ = function (transferred) {\n    var old = this.transferred_;\n    this.transferred_ = transferred;\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  };\n  UploadTask.prototype.transition_ = function (state) {\n    if (this.state_ === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n    }\n  };\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n    }\n  };\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function () {\n      var externalState = taskStateFromInternalTaskState(this.state_);\n      return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type The type of event to listen for.\r\n   */\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    function typeValidator() {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\n      }\n    }\n    var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n    var nextValidator = nullFunctionSpec(true).validator;\n    var observerValidator = looseObjectSpec(null, true).validator;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function nextOrObserverValidator(p) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n      try {\n        observerValidator(p);\n        var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);\n        if (!anyDefined) {\n          throw '';\n        }\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n    var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];\n    validate('on', specs, arguments);\n    var self = this;\n    function makeBinder(specs) {\n      function binder(nextOrObserver, error, complete) {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n        var observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return function () {\n          self.removeObserver_(observer);\n        };\n      }\n      return binder;\n    }\n    function binderNextOrObserverValidator(p) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n      nextOrObserverValidator(p);\n    }\n    var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];\n    var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected The rejection callback.\r\n   */\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n  UploadTask.prototype.addObserver_ = function (observer) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n  UploadTask.prototype.removeObserver_ = function (observer) {\n    var i = this.observers_.indexOf(observer);\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  };\n  UploadTask.prototype.notifyObservers_ = function () {\n    var _this = this;\n    this.finishPromise_();\n    var observers = this.observers_.slice();\n    observers.forEach(function (observer) {\n      _this.notifyObserver_(observer);\n    });\n  };\n  UploadTask.prototype.finishPromise_ = function () {\n    if (this.resolve_ !== null) {\n      var triggered = true;\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          async(this.resolve_.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this.reject_;\n          async(toCall.bind(null, this.error_))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  };\n  UploadTask.prototype.notifyObserver_ = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this.state_);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n  UploadTask.prototype.resume = function () {\n    validate('resume', [], arguments);\n    var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n  UploadTask.prototype.pause = function () {\n    validate('pause', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING;\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n  UploadTask.prototype.cancel = function () {\n    validate('cancel', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n    return valid;\n  };\n  return UploadTask;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\nvar Reference = /** @class */function () {\n  function Reference(service, location) {\n    this.service = service;\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @return The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n  Reference.prototype.toString = function () {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  };\n  Reference.prototype.newRef = function (service, location) {\n    return new Reference(service, location);\n  };\n  Reference.prototype.mappings = function () {\n    return getMappings();\n  };\n  /**\r\n   * @return A reference to the object obtained by\r\n   *     appending childPath, removing any duplicate, beginning, or trailing\r\n   *     slashes.\r\n   */\n  Reference.prototype.child = function (childPath) {\n    validate('child', [stringSpec()], arguments);\n    var newPath = child(this.location.path, childPath);\n    var location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.service, location);\n  };\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * @return A reference to the parent of the\r\n     *     current object, or null if the current object is the root.\r\n     */\n    get: function () {\n      var newPath = parent(this.location.path);\n      if (newPath === null) {\n        return null;\n      }\n      var location = new Location(this.location.bucket, newPath);\n      return this.newRef(this.service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @return An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function () {\n      var location = new Location(this.location.bucket, '');\n      return this.newRef(this.service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function () {\n      return this.location.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function () {\n      return this.location.path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function () {\n      return lastComponent(this.location.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function () {\n      return this.service;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data The blob to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n  Reference.prototype.put = function (data, metadata) {\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data), metadata);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value The string to upload.\r\n   * @param format The format of the string to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n  Reference.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n    validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\n    this.throwIfRoot_('putString');\n    var data = dataFromString(format, value);\n    var metadataClone = Object.assign({}, metadata);\n    if (!isDef(metadataClone['contentType']) && isDef(data.contentType)) {\n      metadataClone['contentType'] = data.contentType;\n    }\n    return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @return A promise that resolves if the deletion succeeds.\r\n   */\n  Reference.prototype.delete = function () {\n    var _this = this;\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = deleteObject(_this.service, _this.location);\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @return A Promise that resolves with all the items and prefixes under\r\n   *      the current storage reference. `prefixes` contains references to\r\n   *      sub-directories and `items` contains references to objects in this\r\n   *      folder. `nextPageToken` is never returned.\r\n   */\n  Reference.prototype.listAll = function () {\n    validate('listAll', [], arguments);\n    var accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(function () {\n      return accumulator;\n    });\n  };\n  Reference.prototype.listAllHelper = function (accumulator, pageToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      var opt, nextPage;\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            opt = {\n              // maxResults is 1000 by default.\n              pageToken: pageToken\n            };\n            return [4 /*yield*/, this.list(opt)];\n          case 1:\n            nextPage = _c.sent();\n            (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n            (_b = accumulator.items).push.apply(_b, nextPage.items);\n            if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\n            return [4 /*yield*/, this.listAllHelper(accumulator, nextPage.nextPageToken)];\n          case 2:\n            _c.sent();\n            _c.label = 3;\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure.\r\n   * Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options See ListOptions for details.\r\n   * @return A Promise that resolves with the items and prefixes.\r\n   *      `prefixes` contains references to sub-folders and `items`\r\n   *      contains references to objects in this folder. `nextPageToken`\r\n   *      can be used to get the rest of the results.\r\n   */\n  Reference.prototype.list = function (options) {\n    validate('list', [listOptionSpec(true)], arguments);\n    var self = this;\n    return this.service.getAuthToken().then(function (authToken) {\n      var op = options || {};\n      var requestInfo = list(self.service, self.location, /*delimiter= */'/', op.pageToken, op.maxResults);\n      return self.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   *     A promise that resolves with the metadata for this object. If this\r\n   *     object doesn't exist or metadata cannot be retreived, the promise is\r\n   *     rejected.\r\n   */\n  Reference.prototype.getMetadata = function () {\n    var _this = this;\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = getMetadata(_this.service, _this.location, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata The new metadata for the object.\r\n   *     Only values that have been explicitly set will be changed. Explicitly\r\n   *     setting a value to null will remove the metadata.\r\n   * @return A promise that resolves\r\n   *     with the new metadata for this object.\r\n   *     @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n  Reference.prototype.updateMetadata = function (metadata) {\n    var _this = this;\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = updateMetadata(_this.service, _this.location, metadata, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * @return A promise that resolves with the download\r\n   *     URL for this object.\r\n   */\n  Reference.prototype.getDownloadURL = function () {\n    var _this = this;\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = getDownloadUrl(_this.service, _this.location, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n        if (url === null) {\n          throw noDownloadURL();\n        }\n        return url;\n      });\n    });\n  };\n  Reference.prototype.throwIfRoot_ = function (name) {\n    if (this.location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n  return Reference;\n}();\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\nvar FailRequest = /** @class */function () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n  FailRequest.prototype.cancel = function (_appDelete) {};\n  return FailRequest;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\nfunction start(f,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n  function canceled() {\n    return cancelState === 2;\n  }\n  var triggeredCallback = false;\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function triggerCallback() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function handler(success) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n    var mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    var waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  var stopped = false;\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\nfunction stop(id) {\n  id(false);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @struct\r\n * @template T\r\n */\nvar NetworkRequest = /** @class */function () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [\n    // Request Timeout: web server didn't receive full request in time.\n    408,\n    // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\nvar RequestEndStatus = /** @class */function () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n  return RequestEndStatus;\n}();\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\nfunction addVersionHeader_(headers) {\n  var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n/**\r\n * @template T\r\n */\nfunction makeRequest(requestInfo, appId, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\nvar StorageService = /** @class */function () {\n  function StorageService(app, authProvider, pool, url) {\n    var _a;\n    this.bucket_ = null;\n    this.appId_ = null;\n    this.deleted_ = false;\n    this.app_ = app;\n    this.authProvider_ = authProvider;\n    this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requests_ = new Set();\n    this.pool_ = pool;\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      this.bucket_ = StorageService.extractBucket_((_a = this.app_) === null || _a === void 0 ? void 0 : _a.options);\n    }\n    this.internals_ = new ServiceInternals(this);\n  }\n  StorageService.extractBucket_ = function (config) {\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n    if (bucketString == null) {\n      return null;\n    }\n    return Location.makeFromBucketSpec(bucketString);\n  };\n  StorageService.prototype.getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var auth, tokenData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            auth = this.authProvider_.getImmediate({\n              optional: true\n            });\n            if (!auth) return [3 /*break*/, 2];\n            return [4 /*yield*/, auth.getToken()];\n          case 1:\n            tokenData = _a.sent();\n            if (tokenData !== null) {\n              return [2 /*return*/, tokenData.accessToken];\n            }\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/, null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n  StorageService.prototype.deleteApp = function () {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requests_.forEach(function (request) {\n      return request.cancel();\n    });\n    this.requests_.clear();\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   * @param loc The Location.\r\n   * @return A firebaseStorage.Reference.\r\n   */\n  StorageService.prototype.makeStorageReference = function (loc) {\n    return new Reference(this, loc);\n  };\n  StorageService.prototype.makeRequest = function (requestInfo, authToken) {\n    var _this = this;\n    if (!this.deleted_) {\n      var request_1 = makeRequest(requestInfo, this.appId_, authToken, this.pool_);\n      this.requests_.add(request_1);\n      // Request removes itself from set when complete.\n      request_1.getPromise().then(function () {\n        return _this.requests_.delete(request_1);\n      }, function () {\n        return _this.requests_.delete(request_1);\n      });\n      return request_1;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n  StorageService.prototype.ref = function (path) {\n    function validator(path) {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n    validate('ref', [stringSpec(validator, true)], arguments);\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n    var ref = new Reference(this, this.bucket_);\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n  StorageService.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n    validate('refFromURL', [stringSpec(validator, false)], arguments);\n    return new Reference(this, url);\n  };\n  Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this.maxUploadRetryTime_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StorageService.prototype.setMaxUploadRetryTime = function (time) {\n    validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.maxUploadRetryTime_ = time;\n  };\n  Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\n    get: function () {\n      return this.maxOperationRetryTime_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StorageService.prototype.setMaxOperationRetryTime = function (time) {\n    validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.maxOperationRetryTime_ = time;\n  };\n  Object.defineProperty(StorageService.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageService.prototype, \"INTERNAL\", {\n    get: function () {\n      return this.internals_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return StorageService;\n}();\n/**\r\n * @struct\r\n */\nvar ServiceInternals = /** @class */function () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\r\n   * Called when the associated app is deleted.\r\n   */\n  ServiceInternals.prototype.delete = function () {\n    this.service_.deleteApp();\n    return Promise.resolve();\n  };\n  return ServiceInternals;\n}();\nvar name = \"@firebase/storage\";\nvar version = \"0.3.43\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Type constant for Firebase Storage.\r\n */\nvar STORAGE_TYPE = 'storage';\nfunction factory(container, url) {\n  // Dependencies\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal');\n  return new StorageService(app, authProvider, new XhrIoPool(), url);\n}\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: StorageService,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\nregisterStorage(firebase);\nexport { registerStorage };","map":{"version":3,"sources":["../src/implementation/constants.ts","../src/implementation/error.ts","../src/implementation/string.ts","../src/implementation/taskenums.ts","../src/implementation/type.ts","../src/implementation/xhrio.ts","../src/implementation/xhrio_network.ts","../src/implementation/xhriopool.ts","../src/implementation/fs.ts","../src/implementation/blob.ts","../src/implementation/location.ts","../src/implementation/json.ts","../src/implementation/path.ts","../src/implementation/url.ts","../src/implementation/metadata.ts","../src/implementation/list.ts","../src/implementation/requestinfo.ts","../src/implementation/requests.ts","../src/implementation/observer.ts","../src/tasksnapshot.ts","../src/implementation/args.ts","../src/implementation/async.ts","../src/task.ts","../src/reference.ts","../src/implementation/failrequest.ts","../src/implementation/backoff.ts","../src/implementation/request.ts","../src/service.ts","../index.ts"],"names":["errorsExports.unknown","errorsExports.invalidFormat","errorsExports.internalError","type.isDef","type.isNativeBlobDefined","type.isNativeBlob","fs.sliceBlob","fs.getBlob","type.isString","errorsExports.invalidDefaultBucket","errorsExports.invalidUrl","type.isNonArrayObject","path.lastComponent","json.jsonObjectOrNull","UrlUtils.makeUrl","UrlUtils.makeQueryString","type.isObject","type.isNonNullObject","type.isInteger","MetadataUtils.fromResourceString","ListResultUtils.fromResponseString","MetadataUtils.downloadUrlFromResourceString","MetadataUtils.toResourceString","type.isFunction","errorsExports.invalidArgumentCount","errorsExports.invalidArgument","type.isJustDef","MetadataUtils.metadataValidator","ListOptionsUtils.listOptionsValidator","type.isNumber","fbsRequests.createResumableUpload","fbsRequests.getResumableUploadStatus","fbsRequests.resumableUploadChunkSize","fbsRequests.ResumableUploadStatus","fbsRequests.continueResumableUpload","fbsRequests.getMetadata","fbsRequests.multipartUpload","typeUtils.isJustDef","fbsAsync","metadata.getMappings","path.child","path.parent","requests.deleteObject","requests.list","requests.getMetadata","requests.updateMetadata","requests.getDownloadUrl","errorsExports.noDownloadURL","errorsExports.invalidRootOperation","backoff.start","backoff.stop","constants.DEFAULT_MAX_OPERATION_RETRY_TIME","constants.DEFAULT_MAX_UPLOAD_RETRY_TIME","constants.CONFIG_STORAGE_BUCKET_KEY","errorsExports.appDeleted","args.validate","args.stringSpec","args.nonNegativeNumberSpec"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\nexport class FirebaseStorageError implements Error {\n  private code_: string;\n  private message_: string;\n  private serverResponse_: string | null;\n  private name_: string;\n\n  constructor(code: Code, message: string) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  codeProp(): string {\n    return this.code;\n  }\n\n  codeEquals(code: Code): boolean {\n    return prependCode(code) === this.codeProp();\n  }\n\n  serverResponseProp(): string | null {\n    return this.serverResponse_;\n  }\n\n  setServerResponseProp(serverResponse: string | null): void {\n    this.serverResponse_ = serverResponse;\n  }\n\n  get name(): string {\n    return this.name_;\n  }\n\n  get code(): string {\n    return this.code_;\n  }\n\n  get message(): string {\n    if (this.serverResponse_) {\n      return this.message_ + '\\n' + this.serverResponse_;\n    } else {\n      return this.message_;\n    }\n  }\n\n  get serverResponse(): null | string {\n    return this.serverResponse_;\n  }\n}\n\nexport const errors = {};\n\n/**\n * @enum {string}\n */\nexport type Code = string;\nexport const Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nexport function prependCode(code: Code): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): FirebaseStorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): FirebaseStorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nexport function unauthorized(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function invalidArgument(\n  index: number,\n  fnName: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT,\n    'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message\n  );\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): FirebaseStorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name The name of the operation that was invalid.\n */\nexport function invalidRootOperation(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format The format that was not valid.\n * @param message A message describing the format violation.\n */\nexport function invalidFormat(\n  format: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message A message describing the internal error.\n */\nexport function internalError(message: string): FirebaseStorageError {\n  throw new FirebaseStorageError(\n    Code.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\n\n/**\n * @enum {string}\n */\nexport type StringFormat = string;\nexport const StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nexport function formatValidator(stringFormat: unknown): void {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n    default:\n      throw (\n        'Expected one of the event types: [' +\n        StringFormat.RAW +\n        ', ' +\n        StringFormat.BASE64 +\n        ', ' +\n        StringFormat.BASE64URL +\n        ', ' +\n        StringFormat.DATA_URL +\n        '].'\n      );\n  }\n}\n\n/**\n * @struct\n */\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw errorsExports.unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw errorsExports.invalidFormat(\n      StringFormat.DATA_URL,\n      'Malformed data URL.'\n    );\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw errorsExports.invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\n/**\n * @struct\n */\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw errorsExports.invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * Enum for task events.\n * @enum {string}\n */\nexport type TaskEvent = string;\nexport const TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n * @enum {string}\n */\nexport type InternalTaskState = string;\nexport const InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\n\n/**\n * External (API-surfaced) enum for task state.\n * @enum {string}\n */\nexport type TaskState = string;\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @return False if the object is undefined or null, true otherwise.\n */\nexport function isDef<T>(p: T | null | undefined): p is T {\n  return p != null;\n}\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isObject(p: unknown): p is { [key: string]: unknown } | null {\n  return typeof p === 'object';\n}\n\nexport function isNonNullObject(p: unknown): p is object {\n  return isObject(p) && p !== null;\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return isObject(p) && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isInteger(p: unknown): p is number {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nexport function isNumber(p: unknown): p is number {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n */\n\nexport interface Headers {\n  [name: string]: string | number;\n}\n\nexport interface XhrIo {\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<XhrIo>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * @enum{number}\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport * as type from './type';\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\n\n/**\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\n * doesn't work in React Native on Android.\n */\nexport class NetworkXhrIo implements XhrIo {\n  private xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<XhrIo>;\n  private sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve(this);\n      });\n    });\n  }\n\n  /**\n   * @override\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<XhrIo> {\n    if (this.sent_) {\n      throw errorsExports.internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (type.isDef(headers)) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (type.isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  /**\n   * @override\n   */\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getErrorCode() before sending'\n      );\n    }\n    return this.errorCode_;\n  }\n\n  /**\n   * @override\n   */\n  getStatus(): number {\n    if (!this.sent_) {\n      throw errorsExports.internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getResponseText(): string {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getResponseText() before sending'\n      );\n    }\n    return this.xhr_.responseText;\n  }\n\n  /**\n   * Aborts the request.\n   * @override\n   */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  /**\n   * @override\n   */\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  /**\n   * @override\n   */\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  /**\n   * @override\n   */\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Replacement for goog.net.XhrIoPool that works with fbs.XhrIo.\n */\nimport { XhrIo } from './xhrio';\nimport { NetworkXhrIo } from './xhrio_network';\n\n/**\n * Factory-like class for creating XhrIo instances.\n */\nexport class XhrIoPool {\n  createXhrIo(): XhrIo {\n    return new NetworkXhrIo();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport * as type from './type';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (type.isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport * as fs from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport * as type from './type';\n\n/**\n * @param opt_elideCopy If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (type.isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (type.isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = fs.sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (type.isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(fs.getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (type.isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\nimport * as errorsExports from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * @struct\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw errorsExports.invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      '(?:storage.googleapis.com|storage.cloud.google.com)';\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw errorsExports.invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (type.isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { DEFAULT_HOST } from './constants';\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(urlPart: string): string {\n  return `https://${DEFAULT_HOST}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport * as json from './json';\nimport { Location } from './location';\nimport * as path from './path';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { Reference } from '../reference';\nimport { StorageService } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\n/**\n * @struct\n */\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!type.isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return path.lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size: number | string | undefined\n  ): number | undefined {\n    if (type.isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: StorageService): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service.makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: StorageService,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: StorageService,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string\n): string | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!type.isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = UrlUtils.makeUrl(urlPart);\n    const queryString = UrlUtils.makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Metadata,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n\nexport function metadataValidator(p: unknown): void {\n  if (!type.isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n  for (const key in p) {\n    if (p.hasOwnProperty(key)) {\n      const val = p[key];\n      if (key === 'customMetadata') {\n        if (!type.isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (type.isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { Location } from './location';\nimport * as json from './json';\nimport * as type from './type';\nimport { ListResult } from '../list';\nimport { StorageService } from '../service';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst MAX_RESULTS_KEY = 'maxResults';\nconst MAX_MAX_RESULTS = 1000;\nconst PAGE_TOKEN_KEY = 'pageToken';\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  service: StorageService,\n  bucket: string,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = service.makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = service.makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  service: StorageService,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = (obj as unknown) as ListResultResponse;\n  return fromBackendResponse(service, bucket, resource);\n}\n\nexport function listOptionsValidator(p: unknown): void {\n  if (!type.isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n  for (const key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (\n        !type.isInteger(p[MAX_RESULTS_KEY]) ||\n        (p[MAX_RESULTS_KEY] as number) <= 0\n      ) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n      if ((p[MAX_RESULTS_KEY] as number) > 1000) {\n        throw `Expected maxResults to be less than or equal to ${MAX_MAX_RESULTS}.`;\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !type.isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Headers, XhrIo } from './xhrio';\n\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\nexport class RequestInfo<T> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n\n  errorHandler:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: (p1: XhrIo, p2: string) => T,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  FirebaseStorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown\n} from './error';\nimport { Location } from './location';\nimport * as MetadataUtils from './metadata';\nimport * as ListResultUtils from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { XhrIo } from './xhrio';\nimport { StorageService } from '../service';\n\n/**\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: StorageService,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => Metadata {\n  function handler(xhr: XhrIo, text: string): Metadata {\n    const metadata = MetadataUtils.fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: StorageService,\n  bucket: string\n): (p1: XhrIo, p2: string) => ListResult {\n  function handler(xhr: XhrIo, text: string): ListResult {\n    const listResult = ListResultUtils.fromResponseString(\n      service,\n      bucket,\n      text\n    );\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: StorageService,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => string | null {\n  function handler(xhr: XhrIo, text: string): string | null {\n    const metadata = MetadataUtils.fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return MetadataUtils.downloadUrlFromResourceString(\n      metadata as Metadata,\n      text\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: StorageService,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: StorageService,\n  location: Location,\n  metadata: Metadata,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'PATCH';\n  const body = MetadataUtils.toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: StorageService,\n  location: Location\n): RequestInfo<void> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: XhrIo, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\nexport function multipartUpload(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = MetadataUtils.toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n * @struct\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(xhr: XhrIo, allowed?: string[]): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = MetadataUtils.toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: XhrIo): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(type.isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: StorageService,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: XhrIo): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const resumableUploadChunkSize: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: StorageService,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: MetadataUtils.Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr: XhrIo, text: string): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\nimport { FirebaseStorageError } from './error';\n\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error | FirebaseStorageError) => void;\nexport type CompleteFn = () => void;\nexport type Unsubscribe = () => void;\n\nexport interface StorageObserver<T> {\n  next?: NextFn<T> | null;\n  error?: ErrorFn | null;\n  complete?: CompleteFn | null;\n}\n\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T> | null,\n  error?: ErrorFn | null,\n  complete?: CompleteFn | null\n) => Unsubscribe;\n\n/**\n * @struct\n */\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T> | null;\n  error?: ErrorFn | null;\n  complete?: CompleteFn | null;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T> | null,\n    error?: ErrorFn | null,\n    complete?: CompleteFn | null\n  ) {\n    const asFunctions =\n      type.isFunction(nextOrObserver) ||\n      type.isDef(error) ||\n      type.isDef(complete);\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T> | null;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T> | null;\n        error?: ErrorFn | null;\n        complete?: CompleteFn | null;\n      };\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TaskState } from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport { Reference } from './reference';\nimport { UploadTask } from './task';\n\nexport class UploadTaskSnapshot {\n  constructor(\n    readonly bytesTransferred: number,\n    readonly totalBytes: number,\n    readonly state: TaskState,\n    readonly metadata: Metadata | null,\n    readonly task: UploadTask,\n    readonly ref: Reference\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport * as MetadataUtils from './metadata';\nimport * as ListOptionsUtils from './list';\nimport * as type from './type';\n\n/**\n * @param name Name of the function.\n * @param specs Argument specs.\n * @param passed The actual arguments passed to the function.\n * @throws {fbs.Error} If the arguments are invalid.\n */\nexport function validate(\n  name: string,\n  specs: ArgSpec[],\n  passed: IArguments\n): void {\n  let minArgs = specs.length;\n  const maxArgs = specs.length;\n  for (let i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n  const validLength = minArgs <= passed.length && passed.length <= maxArgs;\n  if (!validLength) {\n    throw errorsExports.invalidArgumentCount(\n      minArgs,\n      maxArgs,\n      name,\n      passed.length\n    );\n  }\n  for (let i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw errorsExports.invalidArgument(i, name, e.message);\n      } else {\n        throw errorsExports.invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n\n/**\n * @struct\n */\nexport class ArgSpec {\n  validator: (p1: unknown) => void;\n  optional: boolean;\n\n  constructor(validator: (p1: unknown) => void, optional?: boolean) {\n    const self = this;\n    this.validator = function (p: unknown) {\n      if (self.optional && !type.isJustDef(p)) {\n        return;\n      }\n      validator(p);\n    };\n    this.optional = !!optional;\n  }\n}\n\nexport function and_(\n  v1: (p1: unknown) => void,\n  v2: (p1: unknown) => void\n): (p1: unknown) => void {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nexport function stringSpec(\n  validator?: (p1: unknown) => void | null,\n  optional?: boolean\n): ArgSpec {\n  function stringValidator(p: unknown): void {\n    if (!type.isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n  let chainedValidator;\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n  return new ArgSpec(chainedValidator, optional);\n}\n\nexport function uploadDataSpec(): ArgSpec {\n  function validator(p: unknown): void {\n    const valid =\n      p instanceof Uint8Array ||\n      p instanceof ArrayBuffer ||\n      (type.isNativeBlobDefined() && p instanceof Blob);\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function metadataSpec(optional?: boolean): ArgSpec {\n  return new ArgSpec(MetadataUtils.metadataValidator, optional);\n}\n\nexport function listOptionSpec(optional?: boolean): ArgSpec {\n  return new ArgSpec(ListOptionsUtils.listOptionsValidator, optional);\n}\n\nexport function nonNegativeNumberSpec(): ArgSpec {\n  function validator(p: unknown): void {\n    const valid = type.isNumber(p) && p >= 0;\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function looseObjectSpec(\n  validator?: ((p1: unknown) => void) | null,\n  optional?: boolean\n): ArgSpec {\n  function isLooseObjectValidator(p: unknown): void {\n    const isLooseObject = p === null || (type.isDef(p) && p instanceof Object);\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\n\nexport function nullFunctionSpec(optional?: boolean): ArgSpec {\n  function validator(p: unknown): void {\n    const valid = p === null || type.isFunction(p);\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n  return new ArgSpec(validator, optional);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport { FirebaseStorageError, Code, canceled } from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Observer,\n  StorageObserver,\n  Subscribe,\n  Unsubscribe\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot } from './tasksnapshot';\nimport {\n  ArgSpec,\n  nullFunctionSpec,\n  looseObjectSpec,\n  stringSpec,\n  validate\n} from './implementation/args';\nimport { async as fbsAsync } from './implementation/async';\nimport { Location } from './implementation/location';\nimport * as fbsMetadata from './implementation/metadata';\nimport * as fbsRequests from './implementation/requests';\nimport * as typeUtils from './implementation/type';\nimport { Reference } from './reference';\nimport { StorageService } from './service';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n */\nexport class UploadTask {\n  private ref_: Reference;\n  private service_: StorageService;\n  private location_: Location;\n  private blob_: FbsBlob;\n  private metadata_: Metadata | null;\n  private mappings_: fbsMetadata.Mappings;\n  private transferred_: number = 0;\n  private needToFetchStatus_: boolean = false;\n  private needToFetchMetadata_: boolean = false;\n  private observers_: Array<Observer<UploadTaskSnapshot>> = [];\n  private resumable_: boolean;\n  private state_: InternalTaskState;\n  private error_: Error | null = null;\n  private uploadUrl_: string | null = null;\n  private request_: Request<unknown> | null = null;\n  private chunkMultiplier_: number = 1;\n  private errorHandler_: (p1: FirebaseStorageError) => void;\n  private metadataErrorHandler_: (p1: FirebaseStorageError) => void;\n  private resolve_: ((p1: UploadTaskSnapshot) => void) | null = null;\n  private reject_: ((p1: Error) => void) | null = null;\n  private promise_: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob The blob to upload.\n   */\n  constructor(\n    ref: Reference,\n    service: StorageService,\n    location: Location,\n    mappings: fbsMetadata.Mappings,\n    blob: FbsBlob,\n    metadata: Metadata | null = null\n  ) {\n    this.ref_ = ref;\n    this.service_ = service;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n    this.errorHandler_ = error => {\n      this.request_ = null;\n      this.chunkMultiplier_ = 1;\n      if (error.codeEquals(Code.CANCELED)) {\n        this.needToFetchStatus_ = true;\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.metadataErrorHandler_ = error => {\n      this.request_ = null;\n      if (error.codeEquals(Code.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this.promise_.then(null, () => {});\n  }\n\n  private makeProgressCallback_(): (p1: number, p2: number) => void {\n    const sizeBefore = this.transferred_;\n    return loaded => this.updateProgress_(sizeBefore + loaded);\n  }\n\n  private shouldDoResumable_(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private start_(): void {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this.request_ !== null) {\n      return;\n    }\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  }\n\n  private resolveToken_(callback: (p1: string | null) => void): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.service_.getAuthToken().then(authToken => {\n      switch (this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this.transition_(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this.transition_(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private createResumable_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.createResumableUpload(\n        this.service_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const createRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this.request_ = null;\n        this.uploadUrl_ = url;\n        this.needToFetchStatus_ = false;\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private fetchStatus_(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getResumableUploadStatus(\n        this.service_,\n        this.location_,\n        url,\n        this.blob_\n      );\n      const statusRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as fbsRequests.ResumableUploadStatus;\n        this.request_ = null;\n        this.updateProgress_(status.current);\n        this.needToFetchStatus_ = false;\n        if (status.finalized) {\n          this.needToFetchMetadata_ = true;\n        }\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private continueUpload_(): void {\n    const chunkSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n    const status = new fbsRequests.ResumableUploadStatus(\n      this.transferred_,\n      this.blob_.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      let requestInfo;\n      try {\n        requestInfo = fbsRequests.continueResumableUpload(\n          this.location_,\n          this.service_,\n          url,\n          this.blob_,\n          chunkSize,\n          this.mappings_,\n          status,\n          this.makeProgressCallback_()\n        );\n      } catch (e) {\n        this.error_ = e;\n        this.transition_(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = uploadRequest;\n      uploadRequest\n        .getPromise()\n        .then((newStatus: fbsRequests.ResumableUploadStatus) => {\n          this.increaseMultiplier_();\n          this.request_ = null;\n          this.updateProgress_(newStatus.current);\n          if (newStatus.finalized) {\n            this.metadata_ = newStatus.metadata;\n            this.transition_(InternalTaskState.SUCCESS);\n          } else {\n            this.completeTransitions_();\n          }\n        }, this.errorHandler_);\n    });\n  }\n\n  private increaseMultiplier_(): void {\n    const currentSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  }\n\n  private fetchMetadata_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getMetadata(\n        this.service_,\n        this.location_,\n        this.mappings_\n      );\n      const metadataRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.metadataErrorHandler_);\n    });\n  }\n\n  private oneShotUpload_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.multipartUpload(\n        this.service_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const multipartRequest = this.service_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.updateProgress_(this.blob_.size());\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.errorHandler_);\n    });\n  }\n\n  private updateProgress_(transferred: number): void {\n    const old = this.transferred_;\n    this.transferred_ = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  }\n\n  private transition_(state: InternalTaskState): void {\n    if (this.state_ === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this.state_);\n    return new UploadTaskSnapshot(\n      this.transferred_,\n      this.blob_.size(),\n      externalState,\n      this.metadata_,\n      this,\n      this.ref_\n    );\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type The type of event to listen for.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | NextFn<UploadTaskSnapshot>\n      | StorageObserver<UploadTaskSnapshot>\n      | null,\n    error?: ErrorFn | null,\n    completed?: CompleteFn | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    function typeValidator(): void {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw `Expected one of the event types: [${TaskEvent.STATE_CHANGED}].`;\n      }\n    }\n    const nextOrObserverMessage =\n      'Expected a function or an Object with one of ' +\n      '`next`, `error`, `complete` properties.';\n    const nextValidator = nullFunctionSpec(true).validator;\n    const observerValidator = looseObjectSpec(null, true).validator;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function nextOrObserverValidator(p: any): void {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n      try {\n        observerValidator(p);\n        const anyDefined =\n          typeUtils.isJustDef(p['next']) ||\n          typeUtils.isJustDef(p['error']) ||\n          typeUtils.isJustDef(p['complete']);\n        if (!anyDefined) {\n          throw '';\n        }\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n    const specs = [\n      stringSpec(typeValidator),\n      looseObjectSpec(nextOrObserverValidator, true),\n      nullFunctionSpec(true),\n      nullFunctionSpec(true)\n    ];\n    validate('on', specs, arguments);\n    const self = this;\n\n    function makeBinder(\n      specs: ArgSpec[] | null\n    ): Subscribe<UploadTaskSnapshot> {\n      function binder(\n        nextOrObserver?:\n          | NextFn<UploadTaskSnapshot>\n          | StorageObserver<UploadTaskSnapshot>\n          | null,\n        error?: ErrorFn | null,\n        complete?: CompleteFn | null\n      ): () => void {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n        const observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return () => {\n          self.removeObserver_(observer);\n        };\n      }\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p: unknown): void {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n      nextOrObserverValidator(p);\n    }\n    const binderSpecs = [\n      looseObjectSpec(binderNextOrObserverValidator),\n      nullFunctionSpec(true),\n      nullFunctionSpec(true)\n    ];\n    const typeOnly = !(\n      typeUtils.isJustDef(nextOrObserver) ||\n      typeUtils.isJustDef(error) ||\n      typeUtils.isJustDef(completed)\n    );\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: Error) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: Error) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private addObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private removeObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this.observers_.indexOf(observer);\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  }\n\n  private notifyObservers_(): void {\n    this.finishPromise_();\n    const observers = this.observers_.slice();\n    observers.forEach(observer => {\n      this.notifyObserver_(observer);\n    });\n  }\n\n  private finishPromise_(): void {\n    if (this.resolve_ !== null) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this.resolve_.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this.reject_ as (p1: Error) => void;\n          fbsAsync(toCall.bind(null, this.error_ as Error))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  }\n\n  private notifyObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this.state_);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    validate('resume', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.PAUSED ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    validate('pause', [], arguments);\n    const valid = this.state_ === InternalTaskState.RUNNING;\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    validate('cancel', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.RUNNING ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase Storage Reference class.\n */\nimport { FbsBlob } from './implementation/blob';\nimport * as errorsExports from './implementation/error';\nimport { Location } from './implementation/location';\nimport * as metadata from './implementation/metadata';\nimport * as path from './implementation/path';\nimport * as requests from './implementation/requests';\nimport {\n  StringFormat,\n  formatValidator,\n  dataFromString\n} from './implementation/string';\nimport * as type from './implementation/type';\nimport { Metadata } from './metadata';\nimport { StorageService } from './service';\nimport { UploadTask } from './task';\nimport { ListOptions, ListResult } from './list';\nimport {\n  listOptionSpec,\n  stringSpec,\n  validate,\n  metadataSpec,\n  uploadDataSpec\n} from './implementation/args';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @param location An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  protected location: Location;\n\n  constructor(protected service: StorageService, location: string | Location) {\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n\n  /**\n   * @return The URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  }\n\n  protected newRef(service: StorageService, location: Location): Reference {\n    return new Reference(service, location);\n  }\n\n  protected mappings(): metadata.Mappings {\n    return metadata.getMappings();\n  }\n\n  /**\n   * @return A reference to the object obtained by\n   *     appending childPath, removing any duplicate, beginning, or trailing\n   *     slashes.\n   */\n  child(childPath: string): Reference {\n    validate('child', [stringSpec()], arguments);\n    const newPath = path.child(this.location.path, childPath);\n    const location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.service, location);\n  }\n\n  /**\n   * @return A reference to the parent of the\n   *     current object, or null if the current object is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = path.parent(this.location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.service, location);\n  }\n\n  /**\n   * @return An reference to the root of this\n   *     object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this.location.bucket, '');\n    return this.newRef(this.service, location);\n  }\n\n  get bucket(): string {\n    return this.location.bucket;\n  }\n\n  get fullPath(): string {\n    return this.location.path;\n  }\n\n  get name(): string {\n    return path.lastComponent(this.location.path);\n  }\n\n  get storage(): StorageService {\n    return this.service;\n  }\n\n  /**\n   * Uploads a blob to this object's location.\n   * @param data The blob to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metadata: Metadata | null = null\n  ): UploadTask {\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(\n      this,\n      this.service,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data),\n      metadata\n    );\n  }\n\n  /**\n   * Uploads a string to this object's location.\n   * @param value The string to upload.\n   * @param format The format of the string to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  putString(\n    value: string,\n    format: StringFormat = StringFormat.RAW,\n    metadata?: Metadata\n  ): UploadTask {\n    validate(\n      'putString',\n      [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)],\n      arguments\n    );\n    this.throwIfRoot_('putString');\n    const data = dataFromString(format, value);\n    const metadataClone = Object.assign({}, metadata);\n    if (\n      !type.isDef(metadataClone['contentType']) &&\n      type.isDef(data.contentType)\n    ) {\n      metadataClone['contentType'] = data.contentType!;\n    }\n    return new UploadTask(\n      this,\n      this.service,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data.data, true),\n      metadataClone\n    );\n  }\n\n  /**\n   * Deletes the object at this location.\n   * @return A promise that resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.deleteObject(this.service, this.location);\n      return this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * List all items (files) and prefixes (folders) under this storage reference.\n   *\n   * This is a helper method for calling list() repeatedly until there are\n   * no more results. The default pagination size is 1000.\n   *\n   * Note: The results may not be consistent if objects are changed while this\n   * operation is running.\n   *\n   * Warning: listAll may potentially consume too many resources if there are\n   * too many results.\n   *\n   * @return A Promise that resolves with all the items and prefixes under\n   *      the current storage reference. `prefixes` contains references to\n   *      sub-directories and `items` contains references to objects in this\n   *      folder. `nextPageToken` is never returned.\n   */\n  listAll(): Promise<ListResult> {\n    validate('listAll', [], arguments);\n    const accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(() => accumulator);\n  }\n\n  private async listAllHelper(\n    accumulator: ListResult,\n    pageToken?: string\n  ): Promise<void> {\n    const opt: ListOptions = {\n      // maxResults is 1000 by default.\n      pageToken\n    };\n    const nextPage = await this.list(opt);\n    accumulator.prefixes.push(...nextPage.prefixes);\n    accumulator.items.push(...nextPage.items);\n    if (nextPage.nextPageToken != null) {\n      await this.listAllHelper(accumulator, nextPage.nextPageToken);\n    }\n  }\n\n  /**\n   * List items (files) and prefixes (folders) under this storage reference.\n   *\n   * List API is only available for Firebase Rules Version 2.\n   *\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n   * delimited folder structure.\n   * Refer to GCS's List API if you want to learn more.\n   *\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n   * support objects whose paths end with \"/\" or contain two consecutive\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n   * list() may fail if there are too many unsupported objects in the bucket.\n   *\n   * @param options See ListOptions for details.\n   * @return A Promise that resolves with the items and prefixes.\n   *      `prefixes` contains references to sub-folders and `items`\n   *      contains references to objects in this folder. `nextPageToken`\n   *      can be used to get the rest of the results.\n   */\n  list(options?: ListOptions | null): Promise<ListResult> {\n    validate('list', [listOptionSpec(true)], arguments);\n    const self = this;\n    return this.service.getAuthToken().then(authToken => {\n      const op = options || {};\n      const requestInfo = requests.list(\n        self.service,\n        self.location,\n        /*delimiter= */ '/',\n        op.pageToken,\n        op.maxResults\n      );\n      return self.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   *     A promise that resolves with the metadata for this object. If this\n   *     object doesn't exist or metadata cannot be retreived, the promise is\n   *     rejected.\n   */\n  getMetadata(): Promise<Metadata> {\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.getMetadata(\n        this.service,\n        this.location,\n        this.mappings()\n      );\n      return this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * Updates the metadata for this object.\n   * @param metadata The new metadata for the object.\n   *     Only values that have been explicitly set will be changed. Explicitly\n   *     setting a value to null will remove the metadata.\n   * @return A promise that resolves\n   *     with the new metadata for this object.\n   *     @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMetadata(metadata: Metadata): Promise<Metadata> {\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.updateMetadata(\n        this.service,\n        this.location,\n        metadata,\n        this.mappings()\n      );\n      return this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * @return A promise that resolves with the download\n   *     URL for this object.\n   */\n  getDownloadURL(): Promise<string> {\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.getDownloadUrl(\n        this.service,\n        this.location,\n        this.mappings()\n      );\n      return this.service\n        .makeRequest(requestInfo, authToken)\n        .getPromise()\n        .then(url => {\n          if (url === null) {\n            throw errorsExports.noDownloadURL();\n          }\n          return url;\n        });\n    });\n  }\n\n  private throwIfRoot_(name: string): void {\n    if (this.location.path === '') {\n      throw errorsExports.invalidRootOperation(name);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n * @struct\n * @template T\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: FirebaseStorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport firebase from '@firebase/app';\nimport * as backoff from './backoff';\nimport {\n  FirebaseStorageError,\n  unknown,\n  appDeleted,\n  canceled,\n  retryLimitExceeded\n} from './error';\nimport { RequestInfo } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\nimport { XhrIoPool } from './xhriopool';\n\n/**\n * @template T\n */\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * @struct\n * @template T\n */\nclass NetworkRequest<T> implements Request<T> {\n  private url_: string;\n  private method_: string;\n  private headers_: Headers;\n  private body_: string | Blob | Uint8Array | null;\n  private successCodes_: number[];\n  private additionalRetryCodes_: number[];\n  private pendingXhr_: XhrIo | null = null;\n  private backoffId_: backoff.id | null = null;\n  private resolve_!: (value?: T | PromiseLike<T> | undefined) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private callback_: (p1: XhrIo, p2: string) => T;\n  private errorCallback_:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null;\n  private progressCallback_: ((p1: number, p2: number) => void) | null;\n  private timeout_: number;\n  private pool_: XhrIoPool;\n  promise_: Promise<T>;\n\n  constructor(\n    url: string,\n    method: string,\n    headers: Headers,\n    body: string | Blob | Uint8Array | null,\n    successCodes: number[],\n    additionalRetryCodes: number[],\n    callback: (p1: XhrIo, p2: string) => T,\n    errorCallback:\n      | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n      | null,\n    timeout: number,\n    progressCallback: ((p1: number, p2: number) => void) | null,\n    pool: XhrIoPool\n  ) {\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const self = this;\n\n    function doTheRequest(\n      backoffCallback: (p1: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ): void {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent: ProgressEvent): void {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      xhr\n        .send(self.url_, self.method_, self.body_, self.headers_)\n        .then((xhr: XhrIo) => {\n          if (self.progressCallback_ !== null) {\n            xhr.removeUploadProgressListener(progressListener);\n          }\n          self.pendingXhr_ = null;\n          xhr = xhr as XhrIo;\n          const hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = xhr.getStatus();\n          if (!hitServer || self.isRetryStatusCode_(status)) {\n            const wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = self.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, xhr));\n        });\n    }\n\n    /**\n     * @param requestWentThrough True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    function backoffDone(\n      requestWentThrough: boolean,\n      status: RequestEndStatus\n    ): void {\n      const resolve = self.resolve_;\n      const reject = self.reject_;\n      const xhr = status.xhr as XhrIo;\n      if (status.wasSuccessCode) {\n        try {\n          const result = self.callback_(xhr, xhr.getResponseText());\n          if (type.isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          const err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = backoff.start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      backoff.stop(this.backoffId_);\n    }\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled Defaults to false.\n * @struct\n */\nexport class RequestEndStatus {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public xhr: XhrIo | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(headers: Headers): void {\n  const version =\n    typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\n/**\n * @template T\n */\nexport function makeRequest<T>(\n  requestInfo: RequestInfo<T>,\n  appId: string | null,\n  authToken: string | null,\n  pool: XhrIoPool\n): Request<T> {\n  const queryPart = UrlUtils.makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest<T>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    pool\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport * as args from './implementation/args';\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { XhrIoPool } from './implementation/xhriopool';\nimport { Reference } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { FirebaseOptions } from '@firebase/app-types-exp';\nimport * as constants from '../src/implementation/constants';\nimport * as errorsExports from './implementation/error';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n *\n * @struct\n */\nexport class StorageService {\n  private app_: FirebaseApp | null;\n  private readonly bucket_: Location | null = null;\n  private readonly internals_: ServiceInternals;\n  private readonly authProvider_: Provider<FirebaseAuthInternalName>;\n  private readonly appId_: string | null = null;\n  private readonly pool_: XhrIoPool;\n  private readonly requests_: Set<Request<unknown>>;\n  private deleted_: boolean = false;\n  private maxOperationRetryTime_: number;\n  private maxUploadRetryTime_: number;\n\n  constructor(\n    app: FirebaseApp | null,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    pool: XhrIoPool,\n    url?: string\n  ) {\n    this.app_ = app;\n    this.authProvider_ = authProvider;\n    this.maxOperationRetryTime_ = constants.DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = constants.DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requests_ = new Set();\n    this.pool_ = pool;\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      this.bucket_ = StorageService.extractBucket_(this.app_?.options);\n    }\n    this.internals_ = new ServiceInternals(this);\n  }\n\n  private static extractBucket_(config?: FirebaseOptions): Location | null {\n    const bucketString = config?.[constants.CONFIG_STORAGE_BUCKET_KEY];\n    if (bucketString == null) {\n      return null;\n    }\n    return Location.makeFromBucketSpec(bucketString);\n  }\n\n  async getAuthToken(): Promise<string | null> {\n    const auth = this.authProvider_.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  deleteApp(): void {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requests_.forEach(request => request.cancel());\n    this.requests_.clear();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   * @param loc The Location.\n   * @return A firebaseStorage.Reference.\n   */\n  makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  makeRequest<T>(\n    requestInfo: RequestInfo<T>,\n    authToken: string | null\n  ): Request<T> {\n    if (!this.deleted_) {\n      const request = makeRequest(\n        requestInfo,\n        this.appId_,\n        authToken,\n        this.pool_\n      );\n      this.requests_.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this.requests_.delete(request),\n        () => this.requests_.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(errorsExports.appDeleted());\n    }\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): Reference {\n    function validator(path: unknown): void {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (/^[A-Za-z]+:\\/\\//.test(path as string)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n    args.validate('ref', [args.stringSpec(validator, true)], arguments);\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    const ref = new Reference(this, this.bucket_);\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): Reference {\n    function validator(p: unknown): void {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (!/^[A-Za-z]+:\\/\\//.test(p as string)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n      try {\n        Location.makeFromUrl(p as string);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n    args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);\n    return new Reference(this, url);\n  }\n\n  get maxUploadRetryTime(): number {\n    return this.maxUploadRetryTime_;\n  }\n\n  setMaxUploadRetryTime(time: number): void {\n    args.validate(\n      'setMaxUploadRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.maxUploadRetryTime_ = time;\n  }\n\n  get maxOperationRetryTime(): number {\n    return this.maxOperationRetryTime_;\n  }\n\n  setMaxOperationRetryTime(time: number): void {\n    args.validate(\n      'setMaxOperationRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.maxOperationRetryTime_ = time;\n  }\n\n  get app(): FirebaseApp | null {\n    return this.app_;\n  }\n\n  get INTERNAL(): ServiceInternals {\n    return this.internals_;\n  }\n}\n\n/**\n * @struct\n */\nexport class ServiceInternals {\n  service_: StorageService;\n\n  constructor(service: StorageService) {\n    this.service_ = service;\n  }\n\n  /**\n   * Called when the associated app is deleted.\n   */\n  delete(): Promise<void> {\n    this.service_.deleteApp();\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { StringFormat } from './src/implementation/string';\nimport { TaskEvent, TaskState } from './src/implementation/taskenums';\n\nimport { XhrIoPool } from './src/implementation/xhriopool';\nimport { Reference } from './src/reference';\nimport { StorageService } from './src/service';\nimport * as types from '@firebase/storage-types';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\n\nimport { name, version } from './package.json';\n\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage';\n\nfunction factory(\n  container: ComponentContainer,\n  url?: string\n): types.FirebaseStorage {\n  // Dependencies\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n\n  return (new StorageService(\n    app,\n    authProvider,\n    new XhrIoPool(),\n    url\n  ) as unknown) as types.FirebaseStorage;\n}\n\nexport function registerStorage(instance: _FirebaseNamespace): void {\n  const namespaceExports = {\n    // no-inline\n    TaskState,\n    TaskEvent,\n    StringFormat,\n    Storage: StorageService,\n    Reference\n  };\n  instance.INTERNAL.registerComponent(\n    new Component(STORAGE_TYPE, factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior for `registerStorage`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    storage?: {\n      (app?: FirebaseApp): types.FirebaseStorage;\n      Storage: typeof types.FirebaseStorage;\n\n      StringFormat: {\n        BASE64: types.StringFormat;\n        BASE64URL: types.StringFormat;\n        DATA_URL: types.StringFormat;\n        RAW: types.StringFormat;\n      };\n      TaskEvent: {\n        STATE_CHANGED: types.TaskEvent;\n      };\n      TaskState: {\n        CANCELED: types.TaskState;\n        ERROR: types.TaskState;\n        PAUSED: types.TaskState;\n        RUNNING: types.TaskState;\n        SUCCESS: types.TaskState;\n      };\n    };\n  }\n  interface FirebaseApp {\n    storage?(storageBucket?: string): types.FirebaseStorage;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}