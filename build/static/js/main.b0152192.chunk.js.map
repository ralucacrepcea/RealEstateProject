{"version":3,"sources":["images/real-estate.png","images/google.png","Config/Config.js","Global/ProductsContext.js","Global/CartReducer.js","Global/CartContext.js","Components/Navbar.js","Components/Products.js","Components/Home.js","Components/Signup.js","Components/Login.js","Components/NotFound.js","Components/Cart.js","Components/AddProducts.js","Components/Cashout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","storage","googleProvider","GoogleAuthProvider","ProductsContext","createContext","ProductsContextProvider","React","Component","constructor","args","state","products","componentDidMount","prevProducts","this","collection","onSnapshot","snapshot","docChanges","forEach","change","type","push","ProductID","doc","id","ProductName","data","ProductPrice","ProductImg","setState","render","createElement","Provider","value","props","children","toast","configure","CartReducer","action","shoppingCart","totalPrice","totalQty","product","index","updatedPrice","updatedQty","find","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","qty","cart","TotalProductPrice","findIndex","filtered","filter","CartContext","CartContextProvider","dispatch","useReducer","_objectSpread","Navbar","user","history","useHistory","useContext","className","src","newPhoto","alt","Link","to","Icon","icon","size","onClick","handleLogout","signOut","then","Products","Fragment","length","map","key","price","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","Home","useEffect","onAuthStateChanged","Signup","name","setName","useState","email","setEmail","password","setPassword","error","setError","autoComplete","onSubmit","e","preventDefault","createUserWithEmailAndPassword","cred","uid","set","Name","Email","Password","catch","err","message","htmlFor","required","onChange","target","Login","signInWithEmailAndPassword","loginWithGoogle","signInWithPopup","result","displayName","merge","backgroundColor","color","border","googleLogo","width","marginRight","NotFound","Cart","formatPrice","iosTrashOutline","marginTop","AddProducts","productName","setProductName","productPrice","setProductPrice","productImg","setProductImg","types","ref","concat","put","on","bytesTransferred","totalBytes","console","log","child","getDownloadURL","url","add","Number","document","getElementById","selectedFile","files","includes","Cashout","cell","setCell","address","setAddress","successMsg","setSuccessMsg","time","Date","getTime","BuyerName","BuyerEmail","BuyerCell","BuyerPayment","setTimeout","disabled","placeholder","App","get","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0152192.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/real-estate.c644c448.png\";","module.exports = __webpack_public_path__ + \"static/media/google.ec6fa182.png\";","import * as firebase from 'firebase'\n\nimport 'firebase/storage';\nimport 'firebase/firestore';\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAodfCUEmq0t18QNlbwuhFxw5RY3LhTMaE\",\n  authDomain: \"realestateproject-a07dd.firebaseapp.com\",\n  projectId: \"realestateproject-a07dd\",\n  storageBucket: \"realestateproject-a07dd.firebasestorage.app\",\n  messagingSenderId: \"330138017115\",\n  appId: \"1:330138017115:web:28fdfbc68e86f5f13d8e7e\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\nconst storage = firebase.storage();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, db, storage, googleProvider }","import React, { createContext } from 'react'\nimport { db } from '../Config/Config'\n\nexport const ProductsContext = createContext();\n\nexport class ProductsContextProvider extends React.Component {\n\n    state = {\n        products: []\n    }\n\n    componentDidMount() {\n\n        const prevProducts = this.state.products;\n        db.collection('Products').onSnapshot(snapshot => {\n            let changes = snapshot.docChanges();\n            changes.forEach(change => {\n                if (change.type === 'added') {\n                    prevProducts.push({\n                        ProductID: change.doc.id,\n                        ProductName: change.doc.data().ProductName,\n                        ProductPrice: change.doc.data().ProductPrice,\n                        ProductImg: change.doc.data().ProductImg\n                    })\n                }\n                this.setState({\n                    products: prevProducts\n                })\n            })\n        })\n\n    }\n    render() {\n        return (\n            <ProductsContext.Provider value={{ products: [...this.state.products] }}>\n                {this.props.children}\n            </ProductsContext.Provider>\n        )\n    }\n}\n\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nexport const CartReducer = (state, action) => {\n\n    const { shoppingCart, totalPrice, totalQty } = state;\n\n    let product;\n    let index;\n    let updatedPrice;\n    let updatedQty;\n\n    switch (action.type) {\n\n        case 'ADD_TO_CART':\n\n            const check = shoppingCart.find(product => product.ProductID === action.id);\n            if (check) {\n                toast.info('this product is already in your cart', {\n                    position: \"top-right\",\n                    autoClose: 2000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: false,\n                    draggable: false,\n                    progress: undefined,\n                });\n                return state;\n            }\n            else {\n                product = action.product;\n                product['qty'] = 1;\n                product['TotalProductPrice'] = product.ProductPrice * product.qty;\n                updatedQty = totalQty + 1;\n                updatedPrice = totalPrice + product.ProductPrice;\n                return {\n                    shoppingCart: [product, ...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n                }\n            }\n            break;\n\n        case 'INC':\n            product = action.cart;\n            product.qty = ++product.qty;\n            product.TotalProductPrice = product.qty * product.ProductPrice;\n            updatedQty = totalQty + 1;\n            updatedPrice = totalPrice + product.ProductPrice;\n            index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\n            shoppingCart[index] = product;\n            return {\n                shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n            }\n            break;\n\n        case 'DEC':\n            product = action.cart;\n            if (product.qty > 1) {\n                product.qty = product.qty - 1;\n                product.TotalProductPrice = product.qty * product.ProductPrice;\n                updatedPrice = totalPrice - product.ProductPrice;\n                updatedQty = totalQty - 1;\n                index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\n                shoppingCart[index] = product;\n                return {\n                    shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n                }\n            }\n            else {\n                return state;\n            }\n            break;\n\n        case 'DELETE':\n            const filtered = shoppingCart.filter(product => product.ProductID !== action.id);\n            product = action.cart;\n            updatedQty = totalQty - product.qty;\n            updatedPrice = totalPrice - product.qty * product.ProductPrice;\n            return {\n                shoppingCart: [...filtered], totalPrice: updatedPrice, totalQty: updatedQty\n            }\n            break;\n\n        case 'EMPTY':\n            return {\n                shoppingCart: [], totalPrice: 0, totalQty: 0\n            }\n\n        default:\n            return state;\n\n    }\n\n}\n","import React, { createContext, useReducer } from 'react'\nimport { CartReducer } from './CartReducer'\n\nexport const CartContext = createContext();\n\nexport const CartContextProvider = (props) => {\n\n    const [cart, dispatch] = useReducer(CartReducer, { shoppingCart: [], totalPrice: 0, totalQty: 0 })\n\n    return (\n        <CartContext.Provider value={{ ...cart, dispatch }}>\n            {props.children}\n        </CartContext.Provider>\n    )\n}","import React, { useContext } from 'react'\nimport newPhoto from '../images/real-estate.png';\nimport { Link } from 'react-router-dom'\nimport { auth } from '../Config/Config'\nimport { Icon } from 'react-icons-kit'\nimport { cart } from 'react-icons-kit/entypo/cart'\nimport { useHistory } from 'react-router-dom'\nimport { CartContext } from '../Global/CartContext'\n\nexport const Navbar = ({ user }) => {\n\n    const history = useHistory();\n    const { totalQty } = useContext(CartContext);\n\n    // handle logout\n    const handleLogout = () => {\n        auth.signOut().then(() => {\n            history.push('/login');\n        })\n    }\n\n    return (\n        <div className='navbox'>\n            <div className='leftside'>\n                <img src={newPhoto} alt=\"\" />\n            </div>\n            {!user && <div className='rightside'>\n                <span><Link to=\"signup\" className='navlink'>SIGN UP</Link></span>\n                <span><Link to=\"login\" className='navlink'>LOGIN</Link></span>\n            </div>}\n            {user && <div className='rightside'>\n                <span><Link to=\"/\" className='navlink'>{user}</Link></span>\n                <span><Link to=\"cartproducts\" className='navlink'><Icon icon={cart} size={26}/></Link></span>\n                <span className='no-of-products'>{totalQty}</span>\n                <span><button className='logout-btn' onClick={handleLogout}>Logout</button></span>\n            </div>}\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { ProductsContext } from '../Global/ProductsContext'\nimport { CartContext } from '../Global/CartContext'\n\nexport const Products = () => {\n\n    const formatPrice = (price) => {\n        return new Intl.NumberFormat('en-US', {\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(price);\n    }; \n\n    const { products } = useContext(ProductsContext);\n\n    const { dispatch } = useContext(CartContext);\n\n    return (\n        <>\n            {products.length !== 0 && <h1 className=\"centered-title\">Available Properties</h1>}\n            <div className='products-container'>\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                {products.length === 0 && <h3>Currently there are no properties listed.</h3>}\n                {products.map(product => (\n                    <div className='product-card' key={product.ProductID}>\n                        <div className='product-img'>\n                            <img src={product.ProductImg} alt=\"not found\" />\n                        </div>\n                        <div className='product-name'>\n                            {product.ProductName}\n                        </div>\n                        <div className='product-price'>\n                            $ {formatPrice(product.ProductPrice)}\n                    </div>\n                        <button className='addcart-btn' onClick={() => dispatch({ type: 'ADD_TO_CART', id: product.ProductID, product })}>ADD TO CART</button>\n                    </div>\n                ))}\n            </div>\n        </>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { Navbar } from './Navbar';\nimport { Products } from './Products'\nimport { useHistory } from 'react-router-dom'\nimport { auth } from '../Config/Config'\n\nexport const Home = ({ user }) => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        // forcing user to signup\n        auth.onAuthStateChanged(user => {\n            if (!user) {\n                history.push('/login');\n            }\n        })\n    })\n\n    return (\n        <div className='wrapper'>\n            <Navbar user={user} />\n            <Products />\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { auth, db } from '../Config/Config'\nimport { Link } from 'react-router-dom'\n\nexport const Signup = (props) => {\n\n    // defining state\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    // signup\n    const signup = (e) => {\n        e.preventDefault();\n        auth.createUserWithEmailAndPassword(email, password).then((cred) => {\n            db.collection('SignedUpUsersData').doc(cred.user.uid).set({\n                Name: name,\n                Email: email,\n                Password: password\n            }).then(() => {\n                setName('');\n                setEmail('');\n                setPassword('');\n                setError('');\n                props.history.push('/login');\n            }).catch(err => setError(err.message));\n        }).catch(err => setError(err.message));\n    }\n\n    return (\n        <div className='container'>\n            <br />\n            <h1 className=\"centered-title\">Create an account to use Real Estate Website</h1>\n            <br />\n            <form autoComplete=\"off\" className='form-group' onSubmit={signup}>\n                <label htmlFor=\"name\">Name</label>\n                <input type=\"text\" className='form-control' required\n                    onChange={(e) => setName(e.target.value)} value={name} />\n                <br />\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" className='form-control' required\n                    onChange={(e) => setEmail(e.target.value)} value={email} />\n                <br />\n                <label htmlFor=\"passowrd\">Password</label>\n                <input type=\"password\" className='form-control' required\n                    onChange={(e) => setPassword(e.target.value)} value={password} />\n                <br />\n                <button type=\"submit\" className='btn btn-success btn-md mybtn'>SUBMIT</button>\n            </form>\n            {error && <span className='error-msg'>{error}</span>}\n            <br />\n            <span>Already have an account? Login\n                <Link to=\"login\"> Here</Link>\n            </span>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport googleLogo from '../images/google.png';\nimport { auth, googleProvider, db } from '../Config/Config'\nimport { Link } from 'react-router-dom'\n\nexport const Login = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const login = (e) => {\n        e.preventDefault();\n        auth.signInWithEmailAndPassword(email, password).then(() => {\n            setEmail('');\n            setPassword('');\n            setError('');\n            props.history.push('/');\n        }).catch(err => setError(err.message));\n    }\n\n    const loginWithGoogle = () => {\n        auth.signInWithPopup(googleProvider)\n            .then((result) => {\n                const user = result.user;\n                if (user) {\n                    // Save user details to Firestore if needed\n                    db.collection('SignedUpUsersData')\n                        .doc(user.uid)\n                        .set({\n                            Name: user.displayName,\n                            Email: user.email,\n                        }, { merge: true }); // Merge prevents overwriting existing data\n                }\n                props.history.push('/');\n            })\n            .catch((err) => setError(err.message));\n    };\n\n    return (\n        <div className='container'>\n            <br />\n            <h1 className=\"centered-title\">Log-In to Real Estate Website</h1>\n            <br />\n            <form autoComplete=\"off\" className='form-group' onSubmit={login}>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" className='form-control' required\n                    onChange={(e) => setEmail(e.target.value)} value={email} />\n                <br />\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" className='form-control' required\n                    onChange={(e) => setPassword(e.target.value)} value={password} />\n                <br />\n                <button type=\"submit\" className='btn btn-success btn-md mybtn'>LOGIN</button>\n            </form>\n            {error && <span className='error-msg'>{error}</span>}\n            \n            <button onClick={loginWithGoogle} className=\"btn btn-md mybtn\"  style={{ backgroundColor: '#d1cfcf', color: '#fff', border: 'none' }}>\n                <img\n                    src={googleLogo}\n                    alt=\"Google Logo\"\n                    style={{ width: '20px', marginRight: '10px' }}\n                />\n\n                Login with Google\n            </button>\n            <br />\n            <br/>\n            <span>Don't have an account? Register\n                <Link to=\"signup\"> Here</Link>\n            </span>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NotFound = () => {\n    return (\n        <div>\n            notfound\n        </div>\n    )\n}\n","import React, { useContext, useEffect } from 'react'\nimport { CartContext } from '../Global/CartContext'\nimport { Navbar } from './Navbar';\nimport { Icon } from 'react-icons-kit'\nimport { ic_add } from 'react-icons-kit/md/ic_add'\nimport { ic_remove } from 'react-icons-kit/md/ic_remove'\nimport { iosTrashOutline } from 'react-icons-kit/ionicons/iosTrashOutline'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport { auth } from '../Config/Config'\n\nexport const Cart = ({ user }) => {\n\n    const formatPrice = (price) => {\n        return new Intl.NumberFormat('en-US', {\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(price);\n    };    \n\n    const { shoppingCart, dispatch, totalPrice, totalQty } = useContext(CartContext);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            if (!user) {\n                history.push('/login');\n            }\n        })\n    })\n\n    return (\n        <>\n            <Navbar user={user} />\n            <>\n                {shoppingCart.length !== 0 && <h1 className=\"centered-title\">Your Cart</h1>}\n                <div className='cart-container'>\n                    {\n                        shoppingCart.length === 0 && <>\n                            <br />\n                            <br />\n                            <h3>Currently you do not have any property in your cart.</h3>\n                            <br />\n                            <h5><Link to=\"/\">Return to All Available Properties</Link></h5>\n                        </>\n                    }\n                    {shoppingCart && shoppingCart.map(cart => (\n                        <div className='cart-card' key={cart.ProductID}>\n\n                            <div className='cart-img'>\n                                <img src={cart.ProductImg} alt=\"not found\" />\n                            </div>\n\n                            <div className='cart-name'>{cart.ProductName}</div>\n\n                            <div className='cart-price-orignal'>$ {formatPrice(cart.ProductPrice)}</div>\n\n                            <button className='delete-btn' onClick={() => dispatch({ type: 'DELETE', id: cart.ProductID, cart })}>\n                                <Icon icon={iosTrashOutline} size={24} />\n                            </button>\n                        </div>\n                    ))\n                    }\n                    {shoppingCart.length > 0 && <div className='cart-summary'>\n                        <div className='cart-summary-heading'>\n                            Property-Summary\n                        </div>\n                        <div className='cart-summary-price'>\n                            <span>Total Price</span>\n                            <span>$ {formatPrice(totalPrice)}</span>\n                        </div>\n                        <Link to='cashout' className='cashout-link'>\n                            <button className='btn btn-success btn-md' style={{ marginTop: 5 + 'px' }}>\n                                Contact Me\n                        </button>\n                        </Link>\n                    </div>}\n                </div>\n            </>\n        </>\n    )\n}","import React, { useState } from 'react'\nimport { storage, db } from '../Config/Config'\n\nexport const AddProducts = () => {\n\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState(0);\n    const [productImg, setProductImg] = useState(null);\n    const [error, setError] = useState('');\n\n    const types = ['image/png', 'image/jpeg']; // image types\n\n    const productImgHandler = (e) => {\n        let selectedFile = e.target.files[0];\n        if (selectedFile && types.includes(selectedFile.type)) {\n            setProductImg(selectedFile);\n            setError('')\n        }\n        else {\n            setProductImg(null);\n            setError('Please select a valid image type (jpg or png)');\n        }\n    }\n\n    // add product\n    const addProduct = (e) => {\n        e.preventDefault();\n        const uploadTask = storage.ref(`product-images/${productImg.name}`).put(productImg);\n        uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log(progress);\n        }, err => setError(err.message)\n            , () => {\n                storage.ref('product-images').child(productImg.name).getDownloadURL().then(url => {\n                    db.collection('Products').add({\n                        ProductName: productName,\n                        ProductPrice: Number(productPrice),\n                        ProductImg: url\n                    }).then(() => {\n                        setProductName('');\n                        setProductPrice(0)\n                        setProductImg('');\n                        setError('');\n                        document.getElementById('file').value = '';\n                    }).catch(err => setError(err.message))\n                })\n            })\n    }\n\n    return (\n        <div className='container'>\n            <br />\n            <h2>ADD PRODUCTS</h2>\n            <hr />\n            <form autoComplete=\"off\" className='form-group' onSubmit={addProduct}>\n                <label htmlFor=\"product-name\">Product Name</label>\n                <input type=\"text\" className='form-control' required\n                    onChange={(e) => setProductName(e.target.value)} value={productName} />\n                <br />\n                <label htmlFor=\"product-price\">Product Price</label>\n                <input type=\"number\" className='form-control' required\n                    onChange={(e) => setProductPrice(e.target.value)} value={productPrice} />\n                <br />\n                <label htmlFor=\"product-img\">Product Image</label>\n                <input type=\"file\" className='form-control' id=\"file\" required\n                    onChange={productImgHandler} />\n                <br />\n                <button type=\"submit\" className='btn btn-success btn-md mybtn'>ADD</button>\n            </form>\n            {error && <span className='error-msg'>{error}</span>}\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react'\nimport { auth, db } from '../Config/Config'\nimport { CartContext } from '../Global/CartContext'\nimport { Navbar } from './Navbar';\nimport { useHistory } from 'react-router-dom'\n\nexport const Cashout = (props) => {\n\n    const formatPrice = (price) => {\n        return new Intl.NumberFormat('en-US', {\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(price);\n    }; \n\n    const history = useHistory();\n\n    const { shoppingCart, totalPrice, totalQty, dispatch } = useContext(CartContext);\n\n    // defining state\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [cell, setCell] = useState('');\n    const [address, setAddress] = useState('');\n    const [error, setError] = useState('');\n    const [successMsg, setSuccessMsg] = useState('');\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                db.collection('SignedUpUsersData').doc(user.uid).onSnapshot(snapshot => {\n                    setName(snapshot.data().Name);\n                    setEmail(snapshot.data().Email);\n                })\n            }\n            else {\n                history.push('/login')\n            }\n        })\n    })\n\n    const cashoutSubmit = (e) => {\n        e.preventDefault();\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                const date = new Date();\n                const time = date.getTime();\n                db.collection('Buyer-info ' + user.uid).doc('_' + time).set({\n                    BuyerName: name,\n                    BuyerEmail: email,\n                    BuyerCell: cell,\n                    BuyerPayment: totalPrice,\n                }).then(() => {\n                    setCell('');\n                    setAddress('');\n                    dispatch({ type: 'EMPTY' })\n                    setSuccessMsg('Your order has been placed successfully. Thanks for visiting us. You will be redirected to home page after 5 seconds');\n                    setTimeout(() => {\n                        history.push('/')\n                    }, 5000)\n                }).catch(err => setError(err.message))\n            }\n        })\n    }\n\n    return (\n        <>\n            <Navbar user={props.user} />\n            <div className='container'>\n                <br />\n                <h1 className=\"centered-title\">My Details</h1>\n                <br />\n                {successMsg && <div className='success-msg'>{successMsg}</div>}\n                <form autoComplete=\"off\" className='form-group' onSubmit={cashoutSubmit}>\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" className='form-control' required\n                        value={name} disabled />\n                    <br />\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" className='form-control' required\n                        value={email} disabled />\n                    <br />\n                    <label htmlFor=\"Cell No\">Cell No</label>\n                    <input type=\"number\" className='form-control' required\n                        onChange={(e) => setCell(e.target.value)} value={cell} placeholder='+40 7XXXXXXXX' />\n                    <br />\n                    <label htmlFor=\"Price To Pay\">Price To Pay</label>\n                    <input type=\"text\" className='form-control' required\n                        value={`$ ${formatPrice(totalPrice)}`} disabled />\n                    <br />\n                    <button type=\"submit\" className='btn btn-success btn-md mybtn'>SUBMIT</button>\n                </form>\n                {error && <span className='error-msg'>{error}</span>}\n            </div>\n        </>\n    )\n}\n","import React, { Component } from 'react'\nimport { ProductsContextProvider } from './Global/ProductsContext'\nimport { Home } from './Components/Home'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Signup } from './Components/Signup'\nimport { Login } from './Components/Login'\nimport { NotFound } from './Components/NotFound'\nimport { auth, db } from './Config/Config'\nimport { CartContextProvider } from './Global/CartContext'\nimport { Cart } from './Components/Cart'\nimport { AddProducts } from './Components/AddProducts'\nimport { Cashout } from './Components/Cashout'\n\nexport class App extends Component {\n\n    state = {\n        user: null,\n    }\n\n    componentDidMount() {\n\n        // getting user info for navigation bar\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                db.collection('SignedUpUsersData').doc(user.uid).get().then(snapshot => {\n                    this.setState({\n                        user: snapshot.data().Name\n                    })\n                })\n            }\n            else {\n                this.setState({\n                    user: null\n                })\n            }\n        })\n\n    }\n\n    render() {\n        return (\n            <ProductsContextProvider>\n                <CartContextProvider>\n                    <BrowserRouter>\n                        <Switch>\n                            {/* home */}\n                            <Route exact path='/' component={() => <Home user={this.state.user} />} />\n                            {/* signup */}\n                            <Route path=\"/signup\" component={Signup} />\n                            {/* login */}\n                            <Route path=\"/login\" component={Login} />\n                            {/* cart products */}\n                            <Route path=\"/cartproducts\" component={() => <Cart user={this.state.user} />} />\n                            {/* add products */}\n                            <Route path=\"/addproducts\" component={AddProducts} />\n                            {/* cashout */}\n                            <Route path='/cashout' component={() => <Cashout user={this.state.user} />} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </BrowserRouter>\n                </CartContextProvider>\n            </ProductsContextProvider>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n\n  <App />,\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}