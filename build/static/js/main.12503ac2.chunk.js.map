{"version":3,"sources":["images/real-estate.png","images/google.png","Config/Config.js","Global/ProductsContext.js","Global/CartReducer.js","Global/CartContext.js","Components/Navbar.js","Components/Products.js","Components/Home.js","Components/Signup.js","Components/Login.js","Components/NotFound.js","Components/Cart.js","Components/AddProducts.js","Components/Cashout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","storage","googleProvider","GoogleAuthProvider","ProductsContext","createContext","ProductsContextProvider","React","Component","constructor","arguments","state","products","componentDidMount","prevProducts","this","collection","onSnapshot","snapshot","docChanges","forEach","change","type","push","ProductID","doc","id","ProductName","data","ProductPrice","ProductImg","setState","render","createElement","Provider","value","props","children","toast","configure","CartReducer","action","shoppingCart","totalPrice","totalQty","product","updatedPrice","updatedQty","find","error","position","autoClose","qty","success","filtered","filter","cart","previousState","showUndoToast","CartContext","CartContextProvider","dispatch","useReducer","_objectSpread","Navbar","_ref","user","history","useHistory","useContext","className","src","newPhoto","alt","Link","to","Icon","icon","size","onClick","handleLogout","signOut","then","Products","Fragment","length","map","key","price","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","Home","useEffect","onAuthStateChanged","Signup","name","setName","useState","email","setEmail","password","setPassword","setError","autoComplete","onSubmit","e","preventDefault","createUserWithEmailAndPassword","cred","uid","set","Name","Email","Password","catch","err","message","htmlFor","required","onChange","target","Login","getErrorMessage","errorCode","signInWithEmailAndPassword","code","loginWithGoogle","signInWithPopup","result","displayName","merge","backgroundColor","color","border","googleLogo","width","marginRight","NotFound","Cart","formatPrice","info","dismiss","textDecoration","cursor","borderRadius","padding","fontWeight","marginLeft","transition","hideProgressBar","closeOnClick","pauseOnHover","draggable","handleDelete","iosTrashOutline","marginTop","AddProducts","productName","setProductName","productPrice","setProductPrice","productImg","setProductImg","types","ref","concat","put","on","progress","bytesTransferred","totalBytes","console","log","child","getDownloadURL","url","add","Number","document","getElementById","selectedFile","files","includes","Cashout","cell","setCell","address","setAddress","successMsg","setSuccessMsg","time","Date","getTime","toString","BuyerName","BuyerEmail","BuyerCell","BuyerPayment","setTimeout","disabled","placeholder","App","get","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12503ac2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/real-estate.0a53458e.png\";","module.exports = __webpack_public_path__ + \"static/media/google.ec6fa182.png\";","import * as firebase from 'firebase'\n\nimport 'firebase/storage';\nimport 'firebase/firestore';\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAodfCUEmq0t18QNlbwuhFxw5RY3LhTMaE\",\n  authDomain: \"realestateproject-a07dd.firebaseapp.com\",\n  projectId: \"realestateproject-a07dd\",\n  storageBucket: \"realestateproject-a07dd.firebasestorage.app\",\n  messagingSenderId: \"330138017115\",\n  appId: \"1:330138017115:web:28fdfbc68e86f5f13d8e7e\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\nconst storage = firebase.storage();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, db, storage, googleProvider }","import React, { createContext } from 'react'\nimport { db } from '../Config/Config'\n\nexport const ProductsContext = createContext();\n\nexport class ProductsContextProvider extends React.Component {\n\n    state = {\n        products: []\n    }\n\n    componentDidMount() {\n\n        const prevProducts = this.state.products;\n        db.collection('Products').onSnapshot(snapshot => {\n            let changes = snapshot.docChanges();\n            changes.forEach(change => {\n                if (change.type === 'added') {\n                    prevProducts.push({\n                        ProductID: change.doc.id,\n                        ProductName: change.doc.data().ProductName,\n                        ProductPrice: change.doc.data().ProductPrice,\n                        ProductImg: change.doc.data().ProductImg\n                    })\n                }\n                this.setState({\n                    products: prevProducts\n                })\n            })\n        })\n\n    }\n    render() {\n        return (\n            <ProductsContext.Provider value={{ products: [...this.state.products] }}>\n                {this.props.children}\n            </ProductsContext.Provider>\n        )\n    }\n}\n\n","// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// toast.configure();\n\n// export const CartReducer = (state, action) => {\n\n//     const { shoppingCart, totalPrice, totalQty } = state;\n\n//     let product;\n//     let index;\n//     let updatedPrice;\n//     let updatedQty;\n\n//     switch (action.type) {\n\n//         case 'ADD_TO_CART':\n\n//             const check = shoppingCart.find(product => product.ProductID === action.id);\n//             if (check) {\n//                 toast.error('This property is already in your cart!', {\n//                     position: \"top-center\",\n//                     autoClose: 4000,\n//                     hideProgressBar: false,\n//                     closeOnClick: true,\n//                     pauseOnHover: true,\n//                     draggable: false,\n//                     progress: undefined,\n//                 });\n//                 return state;\n//             }\n//             else {\n//                 product = action.product;\n//                 product['qty'] = 1;\n//                 product['TotalProductPrice'] = product.ProductPrice * product.qty;\n//                 updatedQty = totalQty + 1;\n//                 updatedPrice = totalPrice + product.ProductPrice;\n//                 toast.success('Property added to cart successfully!', {\n//                     position: \"top-center\",\n//                     autoClose: 4000,\n//                     hideProgressBar: false,\n//                     closeOnClick: true,\n//                     pauseOnHover: true,\n//                     draggable: false,\n//                     progress: undefined,\n//                 });\n//                 return {\n//                     shoppingCart: [product, ...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n//                 }\n//             }\n//             break;\n\n//         case 'INC':\n//             product = action.cart;\n//             product.qty = ++product.qty;\n//             product.TotalProductPrice = product.qty * product.ProductPrice;\n//             updatedQty = totalQty + 1;\n//             updatedPrice = totalPrice + product.ProductPrice;\n//             index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\n//             shoppingCart[index] = product;\n//             return {\n//                 shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n//             }\n//             break;\n\n//         case 'DEC':\n//             product = action.cart;\n//             if (product.qty > 1) {\n//                 product.qty = product.qty - 1;\n//                 product.TotalProductPrice = product.qty * product.ProductPrice;\n//                 updatedPrice = totalPrice - product.ProductPrice;\n//                 updatedQty = totalQty - 1;\n//                 index = shoppingCart.findIndex(cart => cart.ProductID === action.id);\n//                 shoppingCart[index] = product;\n//                 return {\n//                     shoppingCart: [...shoppingCart], totalPrice: updatedPrice, totalQty: updatedQty\n//                 }\n//             }\n//             else {\n//                 return state;\n//             }\n//             break;\n\n//         case 'DELETE':\n//             const filtered = shoppingCart.filter(product => product.ProductID !== action.id);\n//             product = action.cart;\n//             updatedQty = totalQty - product.qty;\n//             updatedPrice = totalPrice - product.qty * product.ProductPrice;\n//             toast.info('Property deleted from cart successfully!', {\n//                 position: \"top-center\",\n//                 autoClose: 4000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: false,\n//                 progress: undefined,\n//             });\n//             return {\n//                 shoppingCart: [...filtered], totalPrice: updatedPrice, totalQty: updatedQty\n//             }\n//             break;\n\n//         case 'EMPTY':\n//             return {\n//                 shoppingCart: [], totalPrice: 0, totalQty: 0\n//             }\n\n//         default:\n//             return state;\n\n//     }\n\n// }\n\n\nimport { toast } from 'react-toastify';\nimport React from 'react'; \nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nexport const CartReducer = (state, action) => {\n\n    const { shoppingCart, totalPrice, totalQty } = state;\n\n    let product;\n    let index;\n    let updatedPrice;\n    let updatedQty;\n\n    switch (action.type) {\n\n        case 'ADD_TO_CART':\n            const check = shoppingCart.find(product => product.ProductID === action.id);\n            if (check) {\n                toast.error('This property is already in your cart!', {\n                    position: \"top-center\",\n                    autoClose: 4000,\n                });\n                return state;\n            } else {\n                product = action.product;\n                product['qty'] = 1;\n                product['TotalProductPrice'] = product.ProductPrice * product.qty;\n                updatedQty = totalQty + 1;\n                updatedPrice = totalPrice + product.ProductPrice;\n                toast.success('Property added to cart successfully!', {\n                    position: \"top-center\",\n                    autoClose: 4000,\n                });\n                return {\n                    shoppingCart: [product, ...shoppingCart],\n                    totalPrice: updatedPrice,\n                    totalQty: updatedQty,\n                };\n            }\n\n        case 'DELETE':\n            const filtered = shoppingCart.filter(product => product.ProductID !== action.id);\n            product = action.cart;\n            updatedQty = totalQty - product.qty;\n            updatedPrice = totalPrice - product.qty * product.ProductPrice;\n            const previousState = { shoppingCart, totalPrice, totalQty };\n\n            action.showUndoToast(previousState); // Call the undo toast from the component\n\n            return {\n                shoppingCart: [...filtered],\n                totalPrice: updatedPrice,\n                totalQty: updatedQty,\n            };\n\n        case 'UNDO_DELETE':\n            return action.previousState;\n\n        case 'EMPTY':\n            return {\n                shoppingCart: [],\n                totalPrice: 0,\n                totalQty: 0,\n            };\n\n        default:\n            return state;\n    }\n};\n\n","import React, { createContext, useReducer } from 'react'\nimport { CartReducer } from './CartReducer'\n\nexport const CartContext = createContext();\n\nexport const CartContextProvider = (props) => {\n\n    const [cart, dispatch] = useReducer(CartReducer, { shoppingCart: [], totalPrice: 0, totalQty: 0 })\n\n    return (\n        <CartContext.Provider value={{ ...cart, dispatch }}>\n            {props.children}\n        </CartContext.Provider>\n    )\n}","import React, { useContext } from 'react'\nimport newPhoto from '../images/real-estate.png';\nimport { Link } from 'react-router-dom'\nimport { auth } from '../Config/Config'\nimport { Icon } from 'react-icons-kit'\nimport { cart } from 'react-icons-kit/entypo/cart'\nimport { useHistory } from 'react-router-dom'\nimport { CartContext } from '../Global/CartContext'\n\nexport const Navbar = ({ user }) => {\n\n    const history = useHistory();\n    const { totalQty } = useContext(CartContext);\n\n    // handle logout\n    const handleLogout = () => {\n        auth.signOut().then(() => {\n            history.push('/login');\n        })\n    }\n\n    return (\n        <div className='navbox'>\n            <div className='leftside'>\n                <img src={newPhoto} alt=\"\" />\n            </div>\n            {!user && <div className='rightside'>\n                <span><Link to=\"signup\" className='navlink'>SIGN UP</Link></span>\n                <span><Link to=\"login\" className='navlink'>LOGIN</Link></span>\n            </div>}\n            {user && <div className='rightside'>\n                <span><Link to=\"/\" className='navlink'>{user}</Link></span>\n                <span><Link to=\"cartproducts\" className='navlink'><Icon icon={cart} size={26}/></Link></span>\n                <span className='no-of-products'>{totalQty}</span>\n                <span><button className='logout-btn' onClick={handleLogout}>LOGOUT</button></span>\n            </div>}\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { ProductsContext } from '../Global/ProductsContext'\nimport { CartContext } from '../Global/CartContext'\n\nexport const Products = () => {\n\n    const formatPrice = (price) => {\n        return new Intl.NumberFormat('en-US', {\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(price);\n    }; \n\n    const { products } = useContext(ProductsContext);\n\n    const { dispatch } = useContext(CartContext);\n\n    return (\n        <>\n            {products.length !== 0 && <h1 className=\"centered-title\">Available Properties</h1>}\n            <div className='products-container'>\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                <br />\n                {products.length === 0 && <h3>Currently there are no properties listed.</h3>}\n                {products.map(product => (\n                    <div className='product-card' key={product.ProductID}>\n                        <div className='product-img'>\n                            <img src={product.ProductImg} alt=\"not found\" />\n                        </div>\n                        <div className='product-name'>\n                            {product.ProductName}\n                        </div>\n                        <div className='product-price'>\n                            $ {formatPrice(product.ProductPrice)}\n                    </div>\n                        <button className='addcart-btn' onClick={() => dispatch({ type: 'ADD_TO_CART', id: product.ProductID, product })}>ADD TO CART</button>\n                    </div>\n                ))}\n            </div>\n        </>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { Navbar } from './Navbar';\nimport { Products } from './Products'\nimport { useHistory } from 'react-router-dom'\nimport { auth } from '../Config/Config'\n\nexport const Home = ({ user }) => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        // forcing user to signup\n        auth.onAuthStateChanged(user => {\n            if (!user) {\n                history.push('/login');\n            }\n        })\n    })\n\n    return (\n        <div className='wrapper'>\n            <Navbar user={user} />\n            <Products />\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { auth, db } from '../Config/Config'\nimport { Link } from 'react-router-dom'\n\nexport const Signup = (props) => {\n\n    // defining state\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    // signup\n    const signup = (e) => {\n        e.preventDefault();\n        auth.createUserWithEmailAndPassword(email, password).then((cred) => {\n            db.collection('SignedUpUsersData').doc(cred.user.uid).set({\n                Name: name,\n                Email: email,\n                Password: password\n            }).then(() => {\n                setName('');\n                setEmail('');\n                setPassword('');\n                setError('');\n                props.history.push('/login');\n            }).catch(err => setError(err.message));\n        }).catch(err => setError(err.message));\n    }\n\n    return (\n        <div className='container'>\n            <br />\n            <h1 className=\"centered-title\">Create an account to use Real Estate Website</h1>\n            <br />\n            <form autoComplete=\"off\" className='form-group' onSubmit={signup}>\n                <label htmlFor=\"name\">Name:</label>\n                <input type=\"text\" className='form-control' required\n                    onChange={(e) => setName(e.target.value)} value={name} />\n                <br />\n                <label htmlFor=\"email\">Email:</label>\n                <input type=\"email\" className='form-control' required\n                    onChange={(e) => setEmail(e.target.value)} value={email} />\n                <br />\n                <label htmlFor=\"passowrd\">Password:</label>\n                <input type=\"password\" className='form-control' required\n                    onChange={(e) => setPassword(e.target.value)} value={password} />\n                <br />\n                <button type=\"submit\" className='btn btn-success btn-md mybtn'>REGISTER</button>\n            </form>\n            {error && <span className='error-msg'>{error}</span>}\n            <br />\n            <span>Already have an account? Login\n                <Link to=\"login\"> Here</Link>\n            </span>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport googleLogo from '../images/google.png';\nimport { auth, googleProvider, db } from '../Config/Config'\nimport { Link } from 'react-router-dom'\n\nexport const Login = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const getErrorMessage = (errorCode) => {\n        switch (errorCode) {\n            case 'auth/user-not-found':\n                return 'No account found with this email address.';\n            case 'auth/wrong-password':\n                return 'Invalid password. Please try again.';\n            case 'auth/invalid-email':\n                return 'Please enter a valid email address.';\n            case 'auth/user-disabled':\n                return 'This account has been disabled. Contact support.';\n            default:\n                return 'Wrong credentials!';\n        }\n    };\n\n    const login = (e) => {\n        e.preventDefault();\n        auth.signInWithEmailAndPassword(email, password).then(() => {\n            setEmail('');\n            setPassword('');\n            setError('');\n            props.history.push('/');\n        }).catch(err => setError(getErrorMessage(err.code)));\n    }\n\n    const loginWithGoogle = () => {\n        auth.signInWithPopup(googleProvider)\n            .then((result) => {\n                const user = result.user;\n                if (user) {\n                    db.collection('SignedUpUsersData')\n                        .doc(user.uid)\n                        .set({\n                            Name: user.displayName,\n                            Email: user.email,\n                        }, { merge: true }); \n                }\n                props.history.push('/');\n            })\n            .catch((err) => setError(getErrorMessage(err.code)));\n    };\n\n    return (\n        <div className='container'>\n            <br />\n            <h1 className=\"centered-title\">Log-In to Real Estate Website</h1>\n            <br />\n            <form autoComplete=\"off\" className='form-group' onSubmit={login}>\n                <label htmlFor=\"email\">Email:</label>\n                <input type=\"email\" className='form-control' required\n                    onChange={(e) => setEmail(e.target.value)} value={email} />\n                <br />\n                <label htmlFor=\"password\">Password:</label>\n                <input type=\"password\" className='form-control' required\n                    onChange={(e) => setPassword(e.target.value)} value={password} />\n                {error && <span className='error-msg'>{error}</span>}\n                <br/>\n                <div className=\"half-br\"></div>\n                <button type=\"submit\" className='btn btn-success btn-md mybtn'>LOGIN</button>\n            </form>\n            \n            \n            <button onClick={loginWithGoogle} className=\"btn btn-md mybtn\"  style={{ backgroundColor: '#d1cfcf', color: '#fff', border: 'none' }}>\n                <img\n                    src={googleLogo}\n                    alt=\"Google Logo\"\n                    style={{ width: '20px', marginRight: '10px' }}\n                />\n\n                LOGIN WITH GOOGLE\n            </button>\n            <br />\n            <br/>\n            <span>Don't have an account? Register\n                <Link to=\"signup\"> Here</Link>\n            </span>\n\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NotFound = () => {\n    return (\n        <div>\n            notfound\n        </div>\n    )\n}\n","// import React, { useContext, useEffect } from 'react'\n// import { CartContext } from '../Global/CartContext'\n// import { Navbar } from './Navbar';\n// import { Icon } from 'react-icons-kit'\n// import { ic_add } from 'react-icons-kit/md/ic_add'\n// import { ic_remove } from 'react-icons-kit/md/ic_remove'\n// import { iosTrashOutline } from 'react-icons-kit/ionicons/iosTrashOutline'\n// import { Link } from 'react-router-dom'\n// import { useHistory } from 'react-router-dom'\n// import { auth } from '../Config/Config'\n\n// export const Cart = ({ user }) => {\n\n//     const formatPrice = (price) => {\n//         return new Intl.NumberFormat('en-US', {\n//             style: 'decimal',\n//             minimumFractionDigits: 2,\n//             maximumFractionDigits: 2\n//         }).format(price);\n//     };    \n\n//     const { shoppingCart, dispatch, totalPrice, totalQty } = useContext(CartContext);\n\n//     const history = useHistory();\n\n//     useEffect(() => {\n//         auth.onAuthStateChanged(user => {\n//             if (!user) {\n//                 history.push('/login');\n//             }\n//         })\n//     })\n\n//     return (\n//         <>\n//             <Navbar user={user} />\n//             <>\n//                 {shoppingCart.length !== 0 && <h1 className=\"centered-title\">Cart Summary</h1>}\n//                 <div className='cart-container'>\n//                     {\n//                         shoppingCart.length === 0 && <>\n//                             <br />\n//                             <br />\n//                             <h3>Currently you do not have any properties in your cart.</h3>\n//                             <br />\n//                             <h5><Link to=\"/\">Return to All Available Properties</Link></h5>\n//                         </>\n//                     }\n//                     {shoppingCart && shoppingCart.map(cart => (\n//                         <div className='cart-card' key={cart.ProductID}>\n\n//                             <div className='cart-img'>\n//                                 <img src={cart.ProductImg} alt=\"not found\" />\n//                             </div>\n\n//                             <div className='cart-name'>{cart.ProductName}</div>\n\n//                             <div className='cart-price-orignal'>$ {formatPrice(cart.ProductPrice)}</div>\n\n//                             <button className='delete-btn' onClick={() => dispatch({ type: 'DELETE', id: cart.ProductID, cart })}>\n//                                 <Icon icon={iosTrashOutline} size={24} />\n//                             </button>\n//                         </div>\n//                     ))\n//                     }\n//                     {shoppingCart.length > 0 && <div className='cart-summary'>\n//                         <div className='cart-summary-heading'>\n//                             Cart:\n//                         </div>\n//                         <div className='cart-summary-price'>\n//                             <span>Total Price</span>\n//                             <span>$ {formatPrice(totalPrice)}</span>\n//                         </div>\n//                         <Link to='cashout' className='cashout-link'>\n//                             <button className='btn btn-success btn-md' style={{ marginTop: 5 + 'px' }}>\n//                                 CONTACT ME\n//                         </button>\n//                         </Link>\n//                     </div>}\n//                 </div>\n//             </>\n//         </>\n//     )\n// }\n\n\n\nimport React, { useContext, useEffect } from 'react';\nimport { CartContext } from '../Global/CartContext';\nimport { Navbar } from './Navbar';\nimport { Icon } from 'react-icons-kit';\nimport { iosTrashOutline } from 'react-icons-kit/ionicons/iosTrashOutline';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../Config/Config';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Cart = ({ user }) => {\n    const formatPrice = (price) => {\n        return new Intl.NumberFormat('en-US', {\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n        }).format(price);\n    };\n\n    const { shoppingCart, dispatch, totalPrice, totalQty } = useContext(CartContext);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.onAuthStateChanged((user) => {\n            if (!user) {\n                history.push('/login');\n            }\n        });\n    }, [history]);\n\n    const handleDelete = (cart) => {\n        const previousState = { shoppingCart, totalPrice, totalQty };\n    \n        const showUndoToast = (previousState) => {\n            toast.info(\n                <div>\n                    Property deleted from cart successfully!\n                    <button\n                        onClick={() => {\n                            dispatch({ type: 'UNDO_DELETE', previousState });\n                            toast.dismiss();\n                        }}\n                        style={{\n                            backgroundColor: '1px solid #ffffff', \n                            border: '1px solid #ffffff', \n                            color: '#007bff', \n                            textDecoration: 'none', \n                            cursor: 'pointer', \n                            borderRadius: '5px', \n                            padding: '5px 10px', \n                            fontWeight: 'bold', \n                            marginLeft: '10px', \n                            transition: 'background-color 0.3s, color 0.3s', \n                        }}\n                        \n                    >\n                        Undo\n                    </button>\n                </div>,\n                {\n                    position: 'top-center',\n                    autoClose: 4000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: false,\n                }\n            );\n        };\n    \n        dispatch({ type: 'DELETE', id: cart.ProductID, cart, showUndoToast });\n    };\n    \n\n    return (\n        <>\n            <Navbar user={user} />\n            <>\n                {shoppingCart.length !== 0 && <h1 className=\"centered-title\">Cart Summary</h1>}\n                <div className=\"cart-container\">\n                    {shoppingCart.length === 0 && (\n                        <>\n                            <br />\n                            <br />\n                            <h3>Currently you do not have any properties in your cart.</h3>\n                            <br />\n                            <h5>\n                                <Link to=\"/\">Return to All Available Properties</Link>\n                            </h5>\n                        </>\n                    )}\n                    {shoppingCart &&\n                        shoppingCart.map((cart) => (\n                            <div className=\"cart-card\" key={cart.ProductID}>\n                                <div className=\"cart-img\">\n                                    <img src={cart.ProductImg} alt=\"not found\" />\n                                </div>\n                                <div className=\"cart-name\">{cart.ProductName}</div>\n                                <div className=\"cart-price-orignal\">$ {formatPrice(cart.ProductPrice)}</div>\n                                <button className=\"delete-btn\" onClick={() => handleDelete(cart)}>\n                                    <Icon icon={iosTrashOutline} size={24} />\n                                </button>\n                            </div>\n                        ))}\n                    {shoppingCart.length > 0 && (\n                        <div className=\"cart-summary\">\n                            <div className=\"cart-summary-heading\">Cart:</div>\n                            <div className=\"cart-summary-price\">\n                                <span>Total Price</span>\n                                <span>$ {formatPrice(totalPrice)}</span>\n                            </div>\n                            <Link to=\"cashout\" className=\"cashout-link\">\n                                <button className=\"btn btn-success btn-md\" style={{ marginTop: '5px' }}>\n                                    CONTACT ME\n                                </button>\n                            </Link>\n                        </div>\n                    )}\n                </div>\n            </>\n        </>\n    );\n};\n","import React, { useState } from 'react'\nimport { storage, db } from '../Config/Config'\n\nexport const AddProducts = () => {\n\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState(0);\n    const [productImg, setProductImg] = useState(null);\n    const [error, setError] = useState('');\n\n    const types = ['image/png', 'image/jpeg']; // image types\n\n    const productImgHandler = (e) => {\n        let selectedFile = e.target.files[0];\n        if (selectedFile && types.includes(selectedFile.type)) {\n            setProductImg(selectedFile);\n            setError('')\n        }\n        else {\n            setProductImg(null);\n            setError('Please select a valid image type (jpg or png)');\n        }\n    }\n\n    // add product\n    const addProduct = (e) => {\n        e.preventDefault();\n        const uploadTask = storage.ref(`product-images/${productImg.name}`).put(productImg);\n        uploadTask.on('state_changed', snapshot => {\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            console.log(progress);\n        }, err => setError(err.message)\n            , () => {\n                storage.ref('product-images').child(productImg.name).getDownloadURL().then(url => {\n                    db.collection('Products').add({\n                        ProductName: productName,\n                        ProductPrice: Number(productPrice),\n                        ProductImg: url\n                    }).then(() => {\n                        setProductName('');\n                        setProductPrice(0)\n                        setProductImg('');\n                        setError('');\n                        document.getElementById('file').value = '';\n                    }).catch(err => setError(err.message))\n                })\n            })\n    }\n\n    return (\n        <div className='container'>\n            <br />\n            <h2>ADD PRODUCTS</h2>\n            <hr />\n            <form autoComplete=\"off\" className='form-group' onSubmit={addProduct}>\n                <label htmlFor=\"product-name\">Product Name</label>\n                <input type=\"text\" className='form-control' required\n                    onChange={(e) => setProductName(e.target.value)} value={productName} />\n                <br />\n                <label htmlFor=\"product-price\">Product Price</label>\n                <input type=\"number\" className='form-control' required\n                    onChange={(e) => setProductPrice(e.target.value)} value={productPrice} />\n                <br />\n                <label htmlFor=\"product-img\">Product Image</label>\n                <input type=\"file\" className='form-control' id=\"file\" required\n                    onChange={productImgHandler} />\n                <br />\n                <button type=\"submit\" className='btn btn-success btn-md mybtn'>ADD</button>\n            </form>\n            {error && <span className='error-msg'>{error}</span>}\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react'\nimport { auth, db } from '../Config/Config'\nimport { CartContext } from '../Global/CartContext'\nimport { Navbar } from './Navbar';\nimport { useHistory } from 'react-router-dom'\n\nexport const Cashout = (props) => {\n\n    const formatPrice = (price) => {\n        return new Intl.NumberFormat('en-US', {\n            style: 'decimal',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n        }).format(price);\n    }; \n\n    const history = useHistory();\n\n    const { shoppingCart, totalPrice, totalQty, dispatch } = useContext(CartContext);\n\n    // defining state\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [cell, setCell] = useState('');\n    const [address, setAddress] = useState('');\n    const [error, setError] = useState('');\n    const [successMsg, setSuccessMsg] = useState('');\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                db.collection('SignedUpUsersData').doc(user.uid).onSnapshot(snapshot => {\n                    setName(snapshot.data().Name);\n                    setEmail(snapshot.data().Email);\n                })\n            }\n            else {\n                history.push('/login')\n            }\n        })\n    })\n\n    const cashoutSubmit = (e) => {\n        e.preventDefault();\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                const date = new Date();\n                const time = date.getTime();\n                db.collection('Buyer-info').doc(time.toString()).set({\n                    BuyerName: name,\n                    BuyerEmail: email,\n                    BuyerCell: cell,\n                    BuyerPayment: totalPrice,\n                }).then(() => {\n                    setCell('');\n                    setAddress('');\n                    dispatch({ type: 'EMPTY' })\n                    setSuccessMsg('Your order has been placed successfully. Thanks for visiting us. You will be redirected to home page after 5 seconds');\n                    setTimeout(() => {\n                        history.push('/')\n                    }, 5000)\n                }).catch(err => setError(err.message))\n            }\n        })\n    }\n\n    return (\n        <>\n            <Navbar user={props.user} />\n            <div className='container'>\n                <br />\n                <h1 className=\"centered-title\">My Details</h1>\n                <br />\n                {successMsg && <div className='success-msg'>{successMsg}</div>}\n                <form autoComplete=\"off\" className='form-group' onSubmit={cashoutSubmit}>\n                    <label htmlFor=\"name\">Name:</label>\n                    <input type=\"text\" className='form-control' required\n                        value={name} disabled />\n                    <br />\n                    <label htmlFor=\"email\">Email:</label>\n                    <input type=\"email\" className='form-control' required\n                        value={email} disabled />\n                    <br />\n                    <label htmlFor=\"Cell No\">Phone number:</label>\n                    <input type=\"number\" className='form-control' required\n                        onChange={(e) => setCell(e.target.value)} value={cell} placeholder='+40 7XXXXXXXX' />\n                    <br />\n                    <label htmlFor=\"Price To Pay\">Total reservation price:</label>\n                    <input type=\"text\" className='form-control' required\n                        value={`$ ${formatPrice(totalPrice)}`} disabled />\n                    <br />\n                    <button type=\"submit\" className='btn btn-success btn-md mybtn'>SUBMIT REQUEST</button>\n                </form>\n                {error && <span className='error-msg'>{error}</span>}\n            </div>\n        </>\n    )\n}\n","import React, { Component } from 'react'\nimport { ProductsContextProvider } from './Global/ProductsContext'\nimport { Home } from './Components/Home'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Signup } from './Components/Signup'\nimport { Login } from './Components/Login'\nimport { NotFound } from './Components/NotFound'\nimport { auth, db } from './Config/Config'\nimport { CartContextProvider } from './Global/CartContext'\nimport { Cart } from './Components/Cart'\nimport { AddProducts } from './Components/AddProducts'\nimport { Cashout } from './Components/Cashout'\n\nexport class App extends Component {\n\n    state = {\n        user: null,\n    }\n\n    componentDidMount() {\n\n        // getting user info for navigation bar\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                db.collection('SignedUpUsersData').doc(user.uid).get().then(snapshot => {\n                    this.setState({\n                        user: snapshot.data().Name\n                    })\n                })\n            }\n            else {\n                this.setState({\n                    user: null\n                })\n            }\n        })\n\n    }\n\n    render() {\n        return (\n            <ProductsContextProvider>\n                <CartContextProvider>\n                    <BrowserRouter>\n                        <Switch>\n                            {/* home */}\n                            <Route exact path='/' component={() => <Home user={this.state.user} />} />\n                            {/* signup */}\n                            <Route path=\"/signup\" component={Signup} />\n                            {/* login */}\n                            <Route path=\"/login\" component={Login} />\n                            {/* cart products */}\n                            <Route path=\"/cartproducts\" component={() => <Cart user={this.state.user} />} />\n                            {/* add products */}\n                            <Route path=\"/addproducts\" component={AddProducts} />\n                            {/* cashout */}\n                            <Route path='/cashout' component={() => <Cashout user={this.state.user} />} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </BrowserRouter>\n                </CartContextProvider>\n            </ProductsContextProvider>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n\n  <App />,\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}